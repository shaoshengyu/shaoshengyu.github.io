<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>邵圣煜的博客</title>
  
  <subtitle>爱生活爱编码</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shaoshengyu.github.io/"/>
  <updated>2019-10-29T12:22:33.157Z</updated>
  <id>http://shaoshengyu.github.io/</id>
  
  <author>
    <name>邵圣煜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>video标签与导航条</title>
    <link href="http://shaoshengyu.github.io/2019/10/29/video/"/>
    <id>http://shaoshengyu.github.io/2019/10/29/video/</id>
    <published>2019-10-29T12:20:57.930Z</published>
    <updated>2019-10-29T12:22:33.157Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line"> *&#123;</span><br><span class="line">    margin:0;</span><br><span class="line">    padding:0;</span><br><span class="line">    text-decoration:none;</span><br><span class="line">    list-style:none;</span><br><span class="line">&#125;</span><br><span class="line">body&#123;</span><br><span class="line">    text-align:left;</span><br><span class="line"> background-color:#CCEEFF;</span><br><span class="line">&#125;</span><br><span class="line">.header&#123;</span><br><span class="line">    display:inline-block;</span><br><span class="line">    position:relative;;</span><br><span class="line">    background-color:#4CAF50;</span><br><span class="line">&#125;</span><br><span class="line">.header:hover .downbtn&#123;</span><br><span class="line">    display:block;</span><br><span class="line">    background-color: #f1f1f1;</span><br><span class="line">&#125;</span><br><span class="line">.header:hover&#123;</span><br><span class="line">    background-color: #3e8e41;</span><br><span class="line">&#125;</span><br><span class="line">.header span&#123;</span><br><span class="line">    padding:15px;</span><br><span class="line">    line-height:61px;</span><br><span class="line">    cursor:pointer;</span><br><span class="line">    color: white;</span><br><span class="line">&#125;</span><br><span class="line">.header .downbtn&#123;</span><br><span class="line">    display:none;</span><br><span class="line">    position:absolute;</span><br><span class="line">    background-color:#f9f9f9;</span><br><span class="line">    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);</span><br><span class="line">    min-width: 160px;</span><br><span class="line">&#125;</span><br><span class="line">.header .downbtn li&#123;</span><br><span class="line">    line-height:30px;</span><br><span class="line">    text-align:left;</span><br><span class="line">    padding-left:5px;</span><br><span class="line">&#125;</span><br><span class="line">.header .downbtn a:hover&#123;</span><br><span class="line">    text-decoration:underline;</span><br><span class="line">    color:#f00;</span><br><span class="line">&#125;</span><br><span class="line">.header .downbtn a&#123;</span><br><span class="line">    display:block;</span><br><span class="line">    color:black;</span><br><span class="line">    width:100%;    </span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;h1 style=&quot;text-align:center&quot;&gt;小视频&lt;/h1&gt;</span><br><span class="line">&lt;head/&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"> &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">        &lt;span&gt;友情链接&gt;&lt;/span&gt;        </span><br><span class="line">        &lt;div class=&quot;downbtn&quot;&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;https://www.baidu.com&quot;&gt;百度&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;下拉列表02&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;下拉列表03&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;下拉列表04&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;下拉列表05&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;&lt;div class=&quot;header&quot;&gt;</span><br><span class="line">&lt;span&gt;Language&gt;&lt;/span&gt;        </span><br><span class="line">        &lt;div class=&quot;downbtn&quot;&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;中文&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;日本語&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;English&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;한국어&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Deutsch&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">&lt;div style=&quot;text-align:center&quot;&gt;</span><br><span class="line">&lt;video id=&quot;myVideo&quot; width=&quot;420&quot; onclick=&quot;playPause()&quot; controls=&quot;controls&quot;&gt;</span><br><span class="line">&lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot; /&gt;</span><br><span class="line">浏览器不支持HTML5:video</span><br><span class="line">&lt;/video&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var v=document.getElementById(&quot;myVideo&quot;);</span><br><span class="line">function playPause()</span><br><span class="line">&#123;</span><br><span class="line">if(v.paused)</span><br><span class="line">v.play();</span><br><span class="line">else</span><br><span class="line">v.pause();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql时间函数的使用</title>
    <link href="http://shaoshengyu.github.io/2019/09/27/mysql-time/"/>
    <id>http://shaoshengyu.github.io/2019/09/27/mysql-time/</id>
    <published>2019-09-27T08:37:19.288Z</published>
    <updated>2019-09-26T05:39:26.689Z</updated>
    
    <content type="html"><![CDATA[<p>–cancat使用中文字符与后面值类型不同会乱码，用字符串转换函数转成char类型<br>select concat(‘当前时间是’,convert(current_timestamp(),char));<br>select concat(‘当前时间是’,convert(current_date(),char),’ ‘,convert(current_time(),char));<br>–从格林时间’1970-01-01 00:00:00’开始计算秒数<br>select unix_timestamp();<br>select unix_timestamp(current_timestamp());<br>select unix_timestamp(‘1980-01-01 00:00:00’);<br>select from_unixtime(315504000);  –与select unix_timestamp()相反<br>–当前所时区时间<br>select now(),current_date()+0;<br>select current_time(),current_time()+0;<br>–utc为世界统一时间<br>select utc_date(),utc_date()+0;<br>select utc_time(),utc_time()+0;<br>–显示月份<br>select month(current_timestamp());  –阿拉伯数字<br>select monthname(current_timestamp());  –英文<br>select month(‘1980-01-01 00:00:00’);<br>–显示为当前年份第几周<br>select week(‘1980-01-01’);  –从第0周开始计数<br>select week(‘1980-12-31 00:00:00’);<br>select week(‘1980-12-30 24:00:00’); –时间不符合标准即大于等于24:00:00时显示null<br>select weekofyear(‘1980-01-01 00:00:00’);  –从第1周开始计数<br>select weekofyear(‘1980-12-28’);<br>select weekofyear(‘1980-12-29 01:00:00’);<br>select weekofyear(‘1980-12-29 -23:00:00’); –符号对时间无影响<br>–显示星期几<br>select dayname(‘2019-09-15’);  –英文表示<br>select dayofweek(‘2019-09-15’);  –阿拉伯数字表示，星期日为一周的开始标为1<br>select dayofweek(‘2019-09-14’);  –阿拉伯数字表示，星期一为一周的结束标为7<br>select weekday(‘2019-09-09’);  –阿拉伯数字表示,星期一为一周的开始标为0<br>select weekday(‘2019-09-15’);  –阿拉伯数字表示,星期日为一周的结束标为6</p><p>select dayofyear(‘1980-02-01’);  –本年第几天<br>select dayofmonth(‘1980-02-01’);  –本月第几天<br>select year(‘1980-02-01’);  –提取年<br>select quarter(‘1980-02-01’);  –第几季度</p><p>select hour(‘888:50:50’);  –小时,区间为838<br>select hour(‘255050’);<br>select hour(‘1980-12-31 25:50:50’);  –有日期时时间要符合规范,否则为空<br>select hour(‘255050’);<br>select hour(‘19801231 238050’);  –该日期格式时间不符合规范则显示最大值<br>select minute(‘25:50:50’);  –分,区间为0-59<br>select minute(‘19801231 255050’);  –该日期格式时间不符合规范则显示最大值<br>select minute(‘255050’);<br>select second(‘25:50:50’);  –秒,区间为0-59<br>select second(‘255050’);<br>select second(‘19801231 2535090’);  –该日期格式时间不符合规范则显示最大值</p><p>–输出所要数据<br>select extract(year from ‘2019-01-01 01:02:03’);<br>select extract(month from ‘2019-01-01 01:02:03’);<br>select extract(day from ‘2019-01-01 01:02:03’);<br>select extract(quarter from ‘2019-01-01 01:02:03’);<br>select extract(hour from ‘2019-01-01 01:02:03’);<br>select extract(minute from ‘2019-01-01 01:02:03’);<br>select extract(second from ‘2019-01-01 01:02:03’);</p><p>–计算从0000-01-01开始的天数<br>select time_to_sec(‘2019-01-01 01:02:03’);<br>select time_to_sec(‘01:02:03’);  –把时间转化为秒忽视日期<br>select to_days(‘2019-01-01’);  –计算从0000-01-01开始的天数</p><p>–计算两个日期之间的天数前面为靠近的日期<br>select datediff(‘2019-01-01’,’1980-01-01’);</p><p>–计算两个时间之间多长，后面为靠近的日期，可设置得到的格式<br>timestampdiff(year,’2019-01-01’,now())</p><p>–计算某时间加上一段时间后的时间<br>select adddate(‘2019-01-01’,2);  –不写interval和单位则默认为天数<br>select adddate(‘2019-01-01 23:02:03’,interval 2 hour);  –计算某时间加上一段时间后的时间<br>select date_add(‘2019-01-01 23:02:03’,interval 4 minute);<br>select subdate(‘2019-01-01’,2);  –不写interval和单位则默认为天数<br>select subdate(‘2019-01-01 23:02:03’,interval 2 hour);  –计算某时间减去一段时间后的时间<br>select date_sub(‘2019-01-01 23:02:03’,interval 4 minute);<br>select addtime(‘2019-01-01 23:59:59’,2);  –加上n秒后时间<br>select subtime(‘2019-01-01 23:02:01’,2);  –减去n秒后时间</p><p>–按照自己设置的格式显示日期<br>select date_format(‘2019-01-01 23:59:59’,’%Y年%m月%d日 %h时%i分%s秒’);  –按照自己设置的格式显示日期<br>select date_format(‘2019-01-01 23:59:59’,’%y年%M月%D日 %H时%I分%S秒’);<br>select time_format(‘2019-01-01 23:59:59’,’%Y年%m月%d日 %h时%i分%s秒’);  –不要加日期否则显示为0<br>select time_format(‘24:59:59’,’耗时%h小时%i分钟%s秒’);<br>select time_format(‘49:59:59’,’耗时%h小时%i分钟%s秒’);  –小时数为24则显示为12，大于24则显示为n%24</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;–cancat使用中文字符与后面值类型不同会乱码，用字符串转换函数转成char类型&lt;br&gt;select concat(‘当前时间是’,convert(current_timestamp(),char));&lt;br&gt;select concat(‘当前时间是’,convert(c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql视图、触发器、存储过程</title>
    <link href="http://shaoshengyu.github.io/2019/09/27/mysqlimpt/"/>
    <id>http://shaoshengyu.github.io/2019/09/27/mysqlimpt/</id>
    <published>2019-09-27T08:37:19.285Z</published>
    <updated>2019-09-27T08:38:49.960Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line">视图</span><br><span class="line"></span><br><span class="line">视图是由数据库中的一个表或多个表导出的虚拟表，是一种虚拟存在的表，方便用户对数据的操作。</span><br><span class="line">数据库中只存放了视图的定义，而并没有存放视图中的数据。</span><br><span class="line">视图中的数据是依赖于原来的表中的数据的。一旦表中的数据发生改变，显示在视图中的数据也会发生改变。</span><br><span class="line"></span><br><span class="line">--创建视图</span><br><span class="line">CREATE [OR REPLACE] [ALGORITHM=&#123;UNDEFINED|MERGE|TEMPTABLE&#125;]</span><br><span class="line">VIEW 视图名[(属性清单)]</span><br><span class="line">AS SELECT语句</span><br><span class="line">[WITH [CASCADED|LOCAL] CHECK OPTION];</span><br><span class="line">参数说明：</span><br><span class="line"></span><br><span class="line">（1）ALGORITHM：可选项，表示视图选择的算法。</span><br><span class="line"></span><br><span class="line">（2）视图名：表示要创建的视图名称。</span><br><span class="line"></span><br><span class="line">（3）属性清单：可选项，指定视图中各个属性的名词，默认情况下与SELECT语句中的查询的属性相同。</span><br><span class="line"></span><br><span class="line">（4）SELECT语句：表示一个完整的查询语句，将查询记录导入视图中。</span><br><span class="line"></span><br><span class="line">（5）WITH CHECK OPTION：可选项，表示更新视图时要保证在该视图的权限范围之内。</span><br><span class="line"></span><br><span class="line">--修改视图</span><br><span class="line">ALTER VIEW 视图名[(属性清单)]</span><br><span class="line">AS SELECT语句</span><br><span class="line"></span><br><span class="line">--删除视图</span><br><span class="line">DROP VIEW IF EXISTS 视图名;</span><br><span class="line"></span><br><span class="line">--例：</span><br><span class="line">create or replace view v_enonajo as select empno,ename,job from emp;</span><br><span class="line">alter view v_enonajo as select empno,ename,job,deptno from emp;</span><br><span class="line">--括号内为列名</span><br><span class="line">create or replace view v_enonajo(eno,ena,ejo) as select empno,ename,job from emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">触发器</span><br><span class="line"></span><br><span class="line">由事件来触发，比如当对一个表进行操作（insert，delete， update）时就会激活它执行。</span><br><span class="line"></span><br><span class="line">触发器创建的四个要素</span><br><span class="line">（1）监视地点（table） </span><br><span class="line">（2）监视事件（insert/update/delete） </span><br><span class="line">（3）触发时间（after/before） </span><br><span class="line">（4）触发事件（insert/update/delete）</span><br><span class="line"> </span><br><span class="line">--创建触发器</span><br><span class="line">  delimiter $ //设置MySQL执行结束标志，默认为;</span><br><span class="line">  </span><br><span class="line">  create trigger t1 </span><br><span class="line">  after</span><br><span class="line">  insert</span><br><span class="line">  on ord</span><br><span class="line">  for each row</span><br><span class="line">  begin</span><br><span class="line">   sql操作语句</span><br><span class="line">  end$</span><br><span class="line"> </span><br><span class="line"> 注：也可以不设置结束符，甚至省略begin和and</span><br><span class="line"></span><br><span class="line">--例：</span><br><span class="line"></span><br><span class="line">--创建触发器</span><br><span class="line">  create trigger  tri_dept_inser</span><br><span class="line">  after </span><br><span class="line">  insert</span><br><span class="line">  on    dept</span><br><span class="line">  for each row</span><br><span class="line">  begin  </span><br><span class="line">  insert into   his_dept(dname,loc)  values(&apos;triname&apos;,&apos;address&apos;);</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">--修改触发器为动态值</span><br><span class="line">  drop trigger tri_dept_inser</span><br><span class="line">  create trigger tri_dept_inser</span><br><span class="line">  after </span><br><span class="line">  insert</span><br><span class="line">  on  dept      </span><br><span class="line">  for each row  </span><br><span class="line">  insert into   his_dept(dname,loc)  values(new.dname,new.loc);</span><br><span class="line"></span><br><span class="line">---delete时触发常在之前监听</span><br><span class="line">  create trigger  tri_dept_dele</span><br><span class="line">  before </span><br><span class="line">  delete</span><br><span class="line">  on  dept      </span><br><span class="line">  for each row  </span><br><span class="line">  insert into   his_dept(dname,loc)  values(old.dname,old.loc);</span><br><span class="line">  </span><br><span class="line">存储过程</span><br><span class="line"></span><br><span class="line">将某些需要被大量重复使用的操作存储为一个过程，开发时可直接调用，提高效率</span><br><span class="line"></span><br><span class="line">create  procedure proc_emp_show()</span><br><span class="line">begin</span><br><span class="line">select * from emp where deptno=7499;</span><br><span class="line">end ; </span><br><span class="line">--调用</span><br><span class="line">call proc_emp_show();</span><br><span class="line"> </span><br><span class="line">  --有参数in存储过程声明</span><br><span class="line"></span><br><span class="line"> CREATE PROCEDURE proc_emp_show2(in in_deptno int)</span><br><span class="line">   BEGIN</span><br><span class="line">    SELECT * FROM emp where deptno=in_deptno;</span><br><span class="line">   END ;</span><br><span class="line"> </span><br><span class="line">--调用</span><br><span class="line">  call proc_emp_show2(20);</span><br><span class="line">  </span><br><span class="line">  --有参数in out存储过程声明</span><br><span class="line"></span><br><span class="line">  CREATE PROCEDURE proc_emp_show3(in in_deptno int,out out_count int)</span><br><span class="line">   BEGIN</span><br><span class="line">       SELECT * FROM emp where deptno=in_deptno;</span><br><span class="line">       SELECT  count(1)  into out_count  FROM emp  where deptno=in_deptno;</span><br><span class="line">   END ;</span><br><span class="line"> </span><br><span class="line">--调用</span><br><span class="line">  set @abc=null;</span><br><span class="line">  set @in_deptno=20;</span><br><span class="line">  call proc_emp_show3(@in_deptno,@abc);</span><br><span class="line">  select @abc;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">--实例 </span><br><span class="line">    1.传入两参数  1个参数 告诉我部门号   2 返回一个字串消息（正常插入 ，非正常插入）</span><br><span class="line">  2，根据部门编号看部门的人数 如果&gt;3 人 不能插入   插入outdept表，《=3正常插入部门信息  新部门成立</span><br><span class="line">  </span><br><span class="line">  备注  传参数    -》   查询count       --&gt; 判断count  --&gt;分类插入--》return true false</span><br><span class="line"> </span><br><span class="line">    --业务操作有参数in out存储过程声明</span><br><span class="line"></span><br><span class="line"> CREATE PROCEDURE proc_emp_show5(in in_deptno int,in in_t_p_name  varchar(20),out out_result varchar(20))</span><br><span class="line">   BEGIN</span><br><span class="line">       declare out_count int default 0;</span><br><span class="line">      SELECT  count(1)  into out_count  FROM emp  where deptno=in_deptno;</span><br><span class="line">      if  out_count &gt;3</span><br><span class="line">      then  </span><br><span class="line">      insert into t_error_person(pname)  values(in_t_p_name);</span><br><span class="line">      set out_result=&apos;插入失败&apos;;</span><br><span class="line">      else</span><br><span class="line">        insert into t_person(pname)  values(in_t_p_name);</span><br><span class="line">         set out_result=&apos;插入成功&apos;;</span><br><span class="line">        end if;</span><br><span class="line">      END ;</span><br><span class="line"></span><br><span class="line"> --测试调用准备</span><br><span class="line">  SELECT  *   FROM emp  where deptno=10;</span><br><span class="line">   SELECT  *   FROM emp  where deptno=30;</span><br><span class="line">    create table  t_person(</span><br><span class="line">  id int primary key AUTO_INCREMENT not null,</span><br><span class="line">  pname varchar(20) not null</span><br><span class="line">  ) </span><br><span class="line">  create table t_error_person  like  t_person;</span><br><span class="line">  </span><br><span class="line">  select * from t_person;</span><br><span class="line">  select * from t_error_person;</span><br><span class="line">--调用</span><br><span class="line"> </span><br><span class="line"> set @in_t_p_name=&apos;用户大于3&apos;;</span><br><span class="line"> set @in_deptno=20;</span><br><span class="line"> set @out_result=null;</span><br><span class="line"> call   proc_emp_show5(@in_deptno,@in_t_p_name,@out_result);</span><br><span class="line"> select @out_result;</span><br><span class="line">  </span><br><span class="line"> set @in_t_p_name=&apos;用户等于3&apos;;</span><br><span class="line"> set @in_deptno=10;</span><br><span class="line"> set @out_result=null;</span><br><span class="line"> call proc_emp_show5(@in_deptno,@in_t_p_name,@out_result);</span><br><span class="line"> select @out_result;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql基础</title>
    <link href="http://shaoshengyu.github.io/2019/09/27/mysql/"/>
    <id>http://shaoshengyu.github.io/2019/09/27/mysql/</id>
    <published>2019-09-27T08:37:18.996Z</published>
    <updated>2019-10-23T07:23:59.001Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line">数值类型(常用)：</span><br><span class="line">numeric:     较常用</span><br><span class="line">decimal(M,D):在mysql 5.0中与numeric相同</span><br><span class="line">TINYINT：    1字节 小整数值</span><br><span class="line">SMALLINT:    2字节 大整数值</span><br><span class="line">INT/INTEGER: 4字节 大整数值</span><br><span class="line">FLOAT：      4字节 单精度，浮点数值</span><br><span class="line">DECIMAL：    对DECIMAL(M,D)，如果M&gt;D，为M+2否则为D+2,常被用于货币</span><br><span class="line"></span><br><span class="line">日期和时间类型(常用)：</span><br><span class="line">DATE：    3字节 1000-01-01/9999-12-31 YYYY-MM-DD 日期值</span><br><span class="line">TIME：    3字节 &apos;-838:59:59&apos;/&apos;838:59:59&apos; HH:MM:SS 时间值或持续时间值</span><br><span class="line">DATETIME：8字节 常用，1000-01-01 00:00:00/9999-12-31 23:59:59  YYYY-MM-DD HH:MM:SS 混合日期和时间值</span><br><span class="line"></span><br><span class="line">字符串类型(常用)：</span><br><span class="line">CHAR：      0-255字节      定长字符串，索引快，耗费存储空间多</span><br><span class="line">VARCHAR:    0-65535字节    变长字符串，索引慢，耗费存储空间少</span><br><span class="line">TINYTEXT：  0-255字节      短文本字符串</span><br><span class="line">TEXT:       0-65536字节    长文本数据</span><br><span class="line">MEDIUMTEXT: 0-16777215字节 中等长度文本数据</span><br><span class="line">LONGTEXT:    0-4294967295字节 极大文本数据</span><br><span class="line"></span><br><span class="line">注释-- # /* */</span><br><span class="line"></span><br><span class="line">创建数据库：create database db_name;</span><br><span class="line">删除数据库：drop database db_name;</span><br><span class="line">使用数据库：use db_name;</span><br><span class="line"></span><br><span class="line">创建表：BINARY区分大小写，unsigned 增长值大小使其为非负数</span><br><span class="line"></span><br><span class="line">(直接主键和添加自增)</span><br><span class="line">CREATE TABLE table_name (</span><br><span class="line">  id int(5) not null primary key auto_increment comment &apos;编号&apos;,</span><br><span class="line">  id2 int not null comment &apos;他表号&apos;,</span><br><span class="line">  name varchar(30) BINARY default null comment &apos;姓名&apos;, --可以为空，BINARY区分大小写</span><br><span class="line">  date datetime CURRENT_TIMESTAMP not null comment &apos;日期&apos;,  --长度默认为0，,默认当时时间</span><br><span class="line">  hp varchar default null comment &apos;hp&apos;,   --长度默认为缺省长度即varchar最大长度,默认为空</span><br><span class="line">  price numeric(10,2) unsigned not null comment &apos;价格&apos;,--总位数为10位，小数点后有2位，不能为空（即整数部分为8位），unsigned 增长值大小使其为非负数</span><br><span class="line">  primary key(id)</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">(先建表再添加约束和索引)(每行加上描述comment &apos;xxx&apos;)</span><br><span class="line">CREATE TABLE table_name (</span><br><span class="line">  id int(5) not null comment &apos;编号&apos;,</span><br><span class="line">  id2 int not null comment &apos;他表号&apos;,</span><br><span class="line">  name varchar(30) BINARY default null comment &apos;姓名&apos;, --可以为空，BINARY区分大小写</span><br><span class="line">  date datetime CURRENT_TIMESTAMP not null comment &apos;日期&apos;,  --长度默认为0,默认当时时间</span><br><span class="line">  hp varchar default null comment &apos;hp&apos;,   --长度默认为缺省长度即varchar最大长度,默认为空</span><br><span class="line">  price numeric(10,2) unsigned not null comment &apos;价格&apos;--总位数为10位，小数点后有2位，不能为空（即整数部分为8位），unsigned 增长值大小使其为非负数</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">引擎为InnoDB,字符集为UTF8</span><br><span class="line">--***</span><br><span class="line">建表时尽量不使用default NULL，数据库表中数据最好不要出现NULL值</span><br><span class="line"></span><br><span class="line">直接创建引擎</span><br><span class="line">create index index_name on table_name(column_name);</span><br><span class="line">create primary index index_name on table_name(column_name);</span><br><span class="line">create unique index index_name on table_name(column_name);</span><br><span class="line"></span><br><span class="line">修改表创建引擎</span><br><span class="line">alter table tb_name add constraint pk_id primary key(id);(添加主键,constraint后为主键索引的名字)</span><br><span class="line">alter table tb_name modify id int(5) auto_increment;(默认自增)</span><br><span class="line">alter table tb_name add constraint uq_name unique(name);(添加唯一约束,constraint后为约束索引的名字)</span><br><span class="line">--所有的存储引擎均对CHECK子句进行分析，但是忽略CHECK子句。</span><br><span class="line">alter table tb_name add constraint ck_age check(age&gt;=1 and age&lt;=100);</span><br><span class="line">(若想实现检查约束效果则直接使用枚举类型enum(1,2,...,100)。)</span><br><span class="line">alter table table_name add constraint fk_tablename_id2_tablename2_2id foreign key(id2) references table_name2(2id);</span><br><span class="line"></span><br><span class="line">index(列名1,列名2) --联合索引</span><br><span class="line"></span><br><span class="line">删除约束：alter table tb_name drop index key_name;</span><br><span class="line">删除表：drop table table_name;</span><br><span class="line">修改表名：ALTER TABLE table_name1 RENAME table_name2;</span><br><span class="line">增加字段：ALTER TABLE table_name ADD info_name varchar(10);</span><br><span class="line">删除字段：ALTER TABLE table_name DROP info_name;</span><br><span class="line">修改字段的类型：ALTER TABLE table_name MODIFY code_name INT;</span><br><span class="line">修改字段的名称和类型：ALTER TABLE table_name CHANGE code_name code_newname VARCHAR(20);</span><br><span class="line"></span><br><span class="line">insert into tablename(列名,...) values(列名值,...);</span><br><span class="line">insert into tablename(列名1，列名2，列名3) values(值1,值2,值3),</span><br><span class="line">(值4,值5,值6),</span><br><span class="line">(值7,值8,值9),</span><br><span class="line">(值10,值11,值12);</span><br><span class="line">insert into tablename(列名,...)</span><br><span class="line">select 列名,...</span><br><span class="line">from tablename2;</span><br><span class="line"></span><br><span class="line">update tablename set 列名=更新值 where 更新条件; </span><br><span class="line"></span><br><span class="line">delete from tablename where 删除条件;</span><br><span class="line"></span><br><span class="line">--查询数据库表**</span><br><span class="line">SELECT</span><br><span class="line">table_name tableName,</span><br><span class="line">    table_schema tableSchema,</span><br><span class="line">ENGINE,</span><br><span class="line">table_comment tableComment,</span><br><span class="line">create_time createTime</span><br><span class="line">FROM</span><br><span class="line">information_schema. TABLES</span><br><span class="line">WHERE</span><br><span class="line">table_schema =(SELECT DATABASE());</span><br><span class="line"></span><br><span class="line">--查询表结构**</span><br><span class="line">SELECT</span><br><span class="line">column_name columnName,</span><br><span class="line">data_type dataType,</span><br><span class="line">column_comment columnComment,</span><br><span class="line">column_key columnKey,</span><br><span class="line">extra</span><br><span class="line">FROM</span><br><span class="line">information_schema. COLUMNS</span><br><span class="line">WHERE</span><br><span class="line"> table_schema =(SELECT DATABASE())</span><br><span class="line"> AND table_name = &apos;emp&apos;;</span><br><span class="line">ORDER BY</span><br><span class="line">ordinal_position</span><br><span class="line"></span><br><span class="line">--***查询优化</span><br><span class="line">查询时不使用*</span><br><span class="line">查询时尽量不使用!=和&lt;&gt;，可用or代替</span><br><span class="line">查询时尽量不使用or，可用union代替</span><br><span class="line"></span><br><span class="line">select id from t where num != 10</span><br><span class="line">select id from t where num &lt; 10 or num &gt; 10</span><br><span class="line">最优化:select id from t where num &lt; 10 union all select id from t where num &gt; 10</span><br><span class="line"></span><br><span class="line">查询时尽量不使用in和not in</span><br><span class="line">select id from t1 where num in (selec tid from t2 where id &gt; 10)</span><br><span class="line">最优化:select id from t1,(select id from t1 where id &gt; 10) t2 where t1.id = t2.id</span><br><span class="line"></span><br><span class="line">数据库查询</span><br><span class="line">select info_name from tb_name where 条件;</span><br><span class="line"></span><br><span class="line">select [distinct(相同值取单,避免多字段重复u) | distinctrow | all] 列名,... </span><br><span class="line">from tb_name </span><br><span class="line">  where 条件</span><br><span class="line">  </span><br><span class="line">  group by 按什么分组的列名1,按什么分组的列名2,...(将列名中值相同的分在一组,当一个条件进行分组只显示每组第一行数据)</span><br><span class="line">  (会依次按照顺序分，先把第一个字段相同的划分为一组，再这些相同的字段中，再查找第二个字段相同的划分为一组)</span><br><span class="line">  having 条件</span><br><span class="line">  </span><br><span class="line">  order by 按什么排序的列名1 ASC(什序) | DESC(降序)(不写默认为ASC),按什么排序的列名2 ASC(什序) | DESC(降序),...</span><br><span class="line"> (先按前面条件排序,当条件1执行完后，出现了字段类字段相同的情况下，相同字段再去执行条件2)</span><br><span class="line"> </span><br><span class="line">  </span><br><span class="line">条件查询常用：</span><br><span class="line"></span><br><span class="line">运算符</span><br><span class="line">数学题运算符: * - * / %</span><br><span class="line">关系运算符: &gt; &gt;= &lt; &lt;= !=(&lt;&gt;) =</span><br><span class="line">逻辑运算符: &amp;&amp;(AND) ||(OR) !(NOT)  (一般用英文表示)</span><br><span class="line"></span><br><span class="line">关键字</span><br><span class="line">列名 between ... and ... (包含边界,一般用于日期型数据)</span><br><span class="line">列名 is null (值为null)</span><br><span class="line">列名 is not null (不是null值)</span><br><span class="line">列名 = &apos;&apos; (值为空字符串)</span><br><span class="line">列名 in(值1,值2,...);</span><br><span class="line">not(条件)</span><br><span class="line"></span><br><span class="line">like模糊查询</span><br><span class="line">查询名字带龙：like &quot;%龙%&quot;</span><br><span class="line">查询名字开头龙：like &quot;龙%&quot;</span><br><span class="line">查询名字结尾龙：like &quot;%龙&quot;</span><br><span class="line">查询名字第二个字符带龙：like &quot;_龙%&quot;</span><br><span class="line">查询名字第n个字符带龙：like &quot;_(n-1个_)龙%&quot;</span><br><span class="line"></span><br><span class="line">select info_name,&apos;XxyY&apos; from table_name where 条件;(XxyY不为列名)</span><br><span class="line">查询结果存在列名为&apos;XxyY&apos;且列值为&apos;XxyY&apos;的一列</span><br><span class="line"></span><br><span class="line">函数</span><br><span class="line">查询第n-1条数据开始的m条数据:limit offset_start(起始第几个数-1),row_count(查询个数)</span><br><span class="line">查询第1条数据开始的m条数据条数据开始的m条数据:limit row_count(查询个数) (默认从第一个开始)</span><br><span class="line">截取字符串</span><br><span class="line">substring(字符串,1):从包括第一个字符开始取后面所有</span><br><span class="line">substring(字符串,-1):从包括倒数第一个字符开始取后面所有</span><br><span class="line">substring(字符串,1,2):从包括第一个字符开始向后取两位</span><br><span class="line">substring_index(字符串,&apos;某字符x&apos;,2)：从第二个x开始取前面所有(不包括x)</span><br><span class="line">substring_index(字符串,&apos;某字符x&apos;,-2)：从第二个x开始取后面所有(不包括x)</span><br><span class="line">统计数量:count(1/主键)</span><br><span class="line">选择语句:if(expr1,expr2,expr3) 若expr1正确则返回expr2,否则返回expr3</span><br><span class="line">将空值替换为xxx:ifnull(列名,&apos;xxx&apos;)</span><br><span class="line">计算长度:length/char_length(xxx) as &apos;需要的名字&apos;</span><br><span class="line">最大值:max(列名) as &apos;需要的名字&apos;</span><br><span class="line">最小值:min(列名) as &apos;需要的名字&apos;</span><br><span class="line">求和:sum(列名) as &apos;需要的名字&apos;</span><br><span class="line">平均数:avg(列名) as &apos;需要的名字&apos;</span><br><span class="line">绝对值:abs(列名) as &apos;需要的名字&apos;</span><br><span class="line">求平方根:sqrt(列名) as &apos;需要的名字&apos; (负数会显示为null)</span><br><span class="line">求余:mod(x,y)(列名) as &apos;需要的名字&apos;</span><br><span class="line">向上取整:ceil/ceiling(列名) as &apos;需要的名字&apos;</span><br><span class="line">向下取整:floor(列名) as &apos;需要的名字&apos;</span><br><span class="line">四舍五入:round(列名,x) as &apos;需要的名字&apos;  (x为截取位数,正数向小数后截取，负数向小数前截取，x=0或不写则截取个位)</span><br><span class="line">直接截取位数:truncate(列名,x) as &apos;需要的名字&apos;  (x为截取位数,正数向小数后截取，负数向小数前截取，x=0或不写则截取个位)</span><br><span class="line">幂函数:pow/power(列名,x) as &apos;需要的名字&apos; (列名为底数,x为指数)</span><br><span class="line">去两边空格:Trim(列名) as &apos;需要的名字&apos;</span><br><span class="line">e的x乘方:exp(x)</span><br><span class="line">转换字符串类型:convert(列名,字段类型)</span><br><span class="line">两时间点之间时长：timestampdiff(年月日等时分秒等格式,较早时间,较晚时间)</span><br><span class="line"></span><br><span class="line">连接字符串:concat(&apos;xxx&apos;,列名,&apos;yyy&apos;)as &apos;需要的名字&apos;</span><br><span class="line">--cancat使用中文字符与后面值类型不同会乱码，用字符串转换函数转成char类型</span><br><span class="line">select concat(&apos;当前时间是&apos;,convert(current_date(),char),convert(current_time(),char));</span><br><span class="line"></span><br><span class="line">将查询结果变为小写:lower(列名)/lcase(列名) </span><br><span class="line">将查询结果变为大写:upper(列名)/ucase(列名)</span><br><span class="line">替换:replace(列名,&apos;x&apos;,&apos;y&apos;) as &apos;需要的名字&apos; (列名中存在的所有x替换成y,区分大小写) </span><br><span class="line">更多函数:https://www.runoob.com/mysql/mysql-functions.html</span><br><span class="line"></span><br><span class="line">除了count函数，其他函数如果没有找到记录，返回值是null，count函数返回0</span><br><span class="line"></span><br><span class="line">列名/表名 as &apos;xxx&apos; 可以为其重命名(单引号可以且建议不写,as也可以不写)</span><br><span class="line">select s.sname sname,s.sid sid from students s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查询从事同一种工作但不属于同一部门的员工信息:</span><br><span class="line">--当2表之间没有关系时使用cross交叉连接,在两表笛卡尔积的结果上显示满足的条件</span><br><span class="line">select distinct(e1.empno),e1.*</span><br><span class="line">from emp e1</span><br><span class="line">cross join emp e2 </span><br><span class="line">on e1.job=e2.job and e1.deptno != e2.deptno</span><br><span class="line">--子查询</span><br><span class="line">select * from emp where job in(</span><br><span class="line">select job from (select * from emp group by job,deptno) as a group by job having count(1)&gt;1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select语句1+union+select语句2</span><br><span class="line">语句2的查询结果会紧接在语句1结果的下方</span><br><span class="line"></span><br><span class="line">--***</span><br><span class="line">将成绩Degree排名rank,并把成绩相同的给予相同排名</span><br><span class="line">select if(@Degree=Degree,@rank,@rank:=@rank+1) as no,@Degree:=Degree as Degree,Sno,Cno</span><br><span class="line">from score,(select @rank:=0,@Degree=null) as t order by Degree desc</span><br><span class="line"></span><br><span class="line">根据ER图建表</span><br><span class="line">矩形为实体即表名</span><br><span class="line">椭圆为属性即列名</span><br><span class="line">连线与菱形为关系，一对一与一对多关系直接在实体表以外键关联，多对多关系需要建立中间表</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>html5的一些常用标签</title>
    <link href="http://shaoshengyu.github.io/2019/08/22/html5/"/>
    <id>http://shaoshengyu.github.io/2019/08/22/html5/</id>
    <published>2019-08-22T12:17:51.713Z</published>
    <updated>2019-08-22T12:19:29.257Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;header&gt;头部标题</span><br><span class="line">&lt;nav&gt;标题栏</span><br><span class="line">&lt;aside&gt;侧边栏</span><br><span class="line">&lt;content&gt;内容</span><br><span class="line">&lt;foot&gt;页脚</span><br><span class="line"></span><br><span class="line">&lt;audio&gt;支持.mp3  .wav  .ogg格式音频文件</span><br><span class="line">&lt;audio src=&quot;&quot; controls=&quot;controls&quot;&gt;&lt;/audio&gt;</span><br><span class="line"></span><br><span class="line">&lt;video&gt;支持.mp4  .webem .ogg格式视频文件</span><br><span class="line">&lt;video id=&quot;&quot; width=&quot;420&quot;&gt;</span><br><span class="line">&lt;source src=&quot;&quot; type=&quot;mp4/video&quot; /&gt;</span><br><span class="line">&lt;/video&gt;</span><br><span class="line">例子:</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;h1&gt;小视频&lt;/h1&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;video id=&quot;myVideo&quot; width=&quot;420&quot;&gt;</span><br><span class="line">&lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot; /&gt;</span><br><span class="line">浏览器不支持HTML5:video</span><br><span class="line">&lt;/video&gt;</span><br><span class="line">&lt;button onclick=&quot;playPause()&quot;&gt;播放/暂停</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var v=document.getElementById(&quot;myVideo&quot;);</span><br><span class="line">function playPause()</span><br><span class="line">&#123;</span><br><span class="line">if(v.paused)</span><br><span class="line">v.play();</span><br><span class="line">else</span><br><span class="line">v.pause();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;canvas&gt;画布</span><br><span class="line">自定义列表&lt;dl&gt;、列表项dt、描述dd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JQuery常用语法</title>
    <link href="http://shaoshengyu.github.io/2019/08/20/JQuery/"/>
    <id>http://shaoshengyu.github.io/2019/08/20/JQuery/</id>
    <published>2019-08-20T08:39:47.047Z</published>
    <updated>2019-08-22T12:22:33.649Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">写更少的代码，做更多的事！</span><br><span class="line">工厂函数$()</span><br><span class="line">DOM:documengt.getElementById(&quot;myList&quot;);</span><br><span class="line">Jquery:$(&quot;#myList&quot;);</span><br><span class="line"></span><br><span class="line">JQuery查找</span><br><span class="line">1.基本选择器</span><br><span class="line">#id  .class  同CSS</span><br><span class="line">2.层级选择器</span><br><span class="line">后代选择器 子代选择器 同css</span><br><span class="line">3.兄弟关系</span><br><span class="line">紧邻的前一个或者后一个元素 $(&quot;...&quot;).next/prev()</span><br><span class="line">之前或者之后的所有元素     $(&quot;...&quot;).nextAll/prevAll</span><br><span class="line">除自己之外的所有兄弟       $(&quot;...&quot;).siblings()</span><br><span class="line"></span><br><span class="line">JQuery修改</span><br><span class="line">1.访问元素属性</span><br><span class="line">(1)获取  $(&quot;...&quot;).attr(&quot;属性名&quot;);</span><br><span class="line">(2)修改  $(&quot;...&quot;).attr(&quot;属性名&quot;，属性值);</span><br><span class="line">2.内容</span><br><span class="line">(1)html操作: html() 读取或修改节点的HTML内容</span><br><span class="line">获取&lt;p&gt;元素   $(&quot;p&quot;).html();</span><br><span class="line">设置&lt;p&gt;元素   $(&quot;p&quot;).html(&quot;&lt;strong&gt;你最喜欢的水果是？&lt;/strong&gt;&quot;);</span><br><span class="line">(2)文本操作</span><br><span class="line">Text():读取或修改节点的文本内容</span><br><span class="line">获取&lt;p&gt;元素   $(&quot;p&quot;).text()</span><br><span class="line">设置&lt;p&gt;元素   $(&quot;p&quot;).text(&quot;你最喜欢的水果是?&quot;);</span><br><span class="line">值操作</span><br><span class="line">读取或修改节点的value属性值   val()</span><br><span class="line">获取按钮的value值 </span><br><span class="line">$(&quot;input:eq(5)&quot;).val();</span><br><span class="line">设置按钮的value值</span><br><span class="line">$(&quot;input&quot;).val(&quot;我被点击了!&quot;);</span><br><span class="line">(3)样式</span><br><span class="line">1.直接修改CSS属性</span><br><span class="line">获取css样式(计算后的样式)    $(&quot;...&quot;).css(&quot;CSS属性名&quot;)</span><br><span class="line">修改css样式                  $(&quot;...&quot;).css(&quot;css属性名&quot;,值)</span><br><span class="line">2.通过修改class批量修改样式</span><br><span class="line">判断是否包含指定class   $(&quot;...&quot;).hasClass(&quot;类名&quot;)</span><br><span class="line">添加class               $(&quot;...&quot;).addClass(&quot;类名&quot;)</span><br><span class="line">移除class               $(&quot;...&quot;).removeClass(&quot;类名&quot;)</span><br><span class="line"></span><br><span class="line">JQuery添加或删除</span><br><span class="line">1.添加</span><br><span class="line">创建新元素</span><br><span class="line">var $newelem=$(&quot;html代码片段&quot;);</span><br><span class="line">将新元素结尾添加到DOM树</span><br><span class="line">$(parent).append($newelem)</span><br><span class="line">例子:</span><br><span class="line">var $li=$(&quot;&lt;li title=&apos;香蕉&apos;&gt;香蕉&lt;/li&gt;&quot;);</span><br><span class="line">var $parent=$(&quot;ul&quot;);</span><br><span class="line">$parent.append($li);</span><br><span class="line">2.删除</span><br><span class="line">$(&quot;...&quot;).remove()</span><br><span class="line">//获取第二个&lt;li&gt;元素节点后,将他从网页中删除</span><br><span class="line">$(&quot;ul li:eq(1)&quot;).remove();</span><br><span class="line">//把&lt;li&gt;元素中属性title不等于&quot;菠萝&quot;的&lt;li&gt;删除</span><br><span class="line">$(&quot;ul li&quot;).remove(&quot;li[title!=菠萝]&quot;);</span><br><span class="line"></span><br><span class="line">JQuery事件</span><br><span class="line">1.事件绑定</span><br><span class="line">$(&quot;...&quot;).bind(&quot;事件类型&quot;,function(e)&#123;...&#125;)</span><br><span class="line">简写形式 $(&quot;...&quot;).事件类型(function(e)&#123;...&#125;)</span><br><span class="line">例子: $(&quot;#btn&quot;).bind(&quot;click&quot;,function(e)&#123;console.log(&quot;hello&quot;);&#125;)</span><br><span class="line">$(&quot;#btn&quot;).click(function(e)&#123;console.log(&quot;hello&quot;);&#125;)</span><br><span class="line">e这个对象中包含与事件相关的信息，也提供了可以影响事件在DOM中传递进程的一些方法</span><br><span class="line"></span><br><span class="line">2.事件对象</span><br><span class="line">事件对象发生时的鼠标位置，键盘按键状态和触发对象等信息</span><br><span class="line">事件发生的X坐标  clientX/offsetX/pageX/screenX/x</span><br><span class="line">事件发生的X坐标  clientY/offsetY/pageY/screenY/y</span><br><span class="line">键盘事件中按下的按键的值  keyCode</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js之DOM与BOM</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/js2/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/js2/</id>
    <published>2019-08-19T14:51:35.358Z</published>
    <updated>2019-08-20T12:15:17.642Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">DOM是W3C的标准，对网页进行增删改查</span><br><span class="line"></span><br><span class="line">DOM查找</span><br><span class="line">1.按id属性精确查找一个元素</span><br><span class="line">var elem=document.getElementById(&quot;myList&quot;);</span><br><span class="line">2.按表签名查找</span><br><span class="line">var elems=parent(父节点).getElementsByTagName(&quot;tag&quot;);</span><br><span class="line">查找直接子节点以及其子代节点并返回一个动态集合</span><br><span class="line">3.通过name属性查找</span><br><span class="line">var elemes=document.getElementsByName(&quot;boy&quot;);</span><br><span class="line">可以返回DOM树中具有制定name属性值的所有子元素集合</span><br><span class="line">4.通过class查找</span><br><span class="line">var elems=parent.getElementsByClassName(&quot;class&quot;);</span><br><span class="line">有兼容性问题:IE9+</span><br><span class="line">5.通过css选择器查找</span><br><span class="line">(1)只找一个元素 var elem=parent.querySelector(&quot;selector&quot;)</span><br><span class="line">若选择器匹配多个,只返回第一个元素</span><br><span class="line">(2)找多个 var elems=parent.querySelectorAll(&quot;selector&quot;)</span><br><span class="line">返回非动态集合</span><br><span class="line"></span><br><span class="line">Math.random()随机数(取不到最大值)，Math.floor取整</span><br><span class="line">产生1-10随机数: Math.floor(Math.random()*10)+1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DOM修改</span><br><span class="line">1.读取属性值</span><br><span class="line">先获得属性节点对象，再获得节点对象的属性值</span><br><span class="line">var attr=elem.attributes[下标/属性名];</span><br><span class="line">var attr=elem.getAttributeNode(属性名)</span><br><span class="line">attr.value 属性值</span><br><span class="line">直接获得属性值</span><br><span class="line">var value=elem.getAttribute(&quot;属性名&quot;);</span><br><span class="line"></span><br><span class="line">2.修改属性</span><br><span class="line">elem.setAttribute(&quot;属性名&quot;,value);</span><br><span class="line">判断元素中是否包含指定属性:</span><br><span class="line">var bool=elem.hasAttribute(&quot;属性名&quot;);</span><br><span class="line">移除属性</span><br><span class="line">&lt;a id=&quot;alink&quot; class=&quot;slink&quot; href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class="line">var a=document.getElementById(&quot;alink&quot;);</span><br><span class="line">a.removeAttribute(&quot;class&quot;);</span><br><span class="line"></span><br><span class="line">3.修改样式</span><br><span class="line">内联样式elem.style.属性名(去横线，变驼峰)</span><br><span class="line">如list-style-type=&gt;listStyleType</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DOM添加</span><br><span class="line">添加元素的步骤</span><br><span class="line"></span><br><span class="line">1.创建空元素</span><br><span class="line">var elem(table)=doucument.createElement(&quot;元素名&quot;(&quot;table&quot;))</span><br><span class="line"></span><br><span class="line">2.设置关键属性</span><br><span class="line">a.innerHTML=&quot;go to tmooc&quot;(a标签中显示的内容)</span><br><span class="line">a.href=&quot;http://tmooc.cn&quot;;</span><br><span class="line">2.设置关键样式</span><br><span class="line">a.style.opacity=&quot;1&quot;;(透明度)</span><br><span class="line">a.style.cssText=&quot;width:100px;heigeht:100px&quot;</span><br><span class="line"></span><br><span class="line">3.将元素添加到DOM树</span><br><span class="line">用于为一个父元素追加最后一个子节点</span><br><span class="line">parentNode.appendChild(ChildNode);</span><br><span class="line">var div=document.createElement(&quot;div&quot;);</span><br><span class="line">var txt=document.createTextNode(&quot;版权声明&quot;);</span><br><span class="line">div.appendChild(txt);</span><br><span class="line">document.body.appendChild(div);</span><br><span class="line"></span><br><span class="line">用于在父元素中的指定子节点之前添加一个新的子节点</span><br><span class="line">parentNode.insertBefore(newChild,existingChild(已经出现的节点));</span><br><span class="line"></span><br><span class="line">添加元素优化</span><br><span class="line">1.如果同时创建父元素和子元素时，建议在内存中先将子元素添加到父元素，再将元父素一次性挂到页面</span><br><span class="line">2.如果只添加多个平级子元素，将所有子元素临时添加到文档片段中，再将文档片段加到页面</span><br><span class="line">内存中临时保存多个虚拟父元素</span><br><span class="line">创建片段</span><br><span class="line">var frag=document.createDocumentFragment();</span><br><span class="line">将子元素临时追加到frag中</span><br><span class="line">frag.appendChild(child);</span><br><span class="line">将frag追加到页面</span><br><span class="line">parent.appendChild(frag);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BOM定时器</span><br><span class="line">获取当前窗口大小window.outerWidth/outerHeight</span><br><span class="line">获取文档显示区大小window.innerWidth/innerHeight</span><br><span class="line"></span><br><span class="line">1.周期性定时器</span><br><span class="line">让程序按一定的时间间隔反复自动执行一项任务</span><br><span class="line">setInterval(exp,time);</span><br><span class="line">exp:执行语句  time:时间周期,单位为毫秒</span><br><span class="line">例:setInterval(function()&#123;</span><br><span class="line">      console.log(&quot;Hello World&quot;);</span><br><span class="line">&#125;,1000);</span><br><span class="line">停止定时器</span><br><span class="line">给定时器取名</span><br><span class="line">var timer =setInterval(function()&#123;</span><br><span class="line">      console.log(&quot;Hello World&quot;);</span><br><span class="line">&#125;,1000);</span><br><span class="line">停止定时器clearInterval(timer);</span><br><span class="line"></span><br><span class="line">2.一次性定时器</span><br><span class="line">让程序延迟一段时间执行</span><br><span class="line">setTimeout(exp,time);</span><br><span class="line">例子:</span><br><span class="line">setTimeout(function()&#123;</span><br><span class="line">       alert(&quot;恭喜过关&quot;);</span><br><span class="line">&#125;,3000);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript基础</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/js1/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/js1/</id>
    <published>2019-08-19T14:51:27.791Z</published>
    <updated>2019-08-20T08:55:49.434Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">js(JavaScript)是一种运行于JavaScript解释器/引擎中的解释型语言(运行前不编译)</span><br><span class="line">js组成:</span><br><span class="line">1.核心(ECMAScript)</span><br><span class="line">2.文档对象模型(DOM),让JS有能力与网页进行对话</span><br><span class="line">3.浏览器对象模型(BOM),让JS有能力与浏览器进行对话</span><br><span class="line">控制台输出console.log();</span><br><span class="line">页面输出document.write();</span><br><span class="line"></span><br><span class="line">将JS脚本嵌入在HTML页面中执行的步骤:</span><br><span class="line">1.将js代码嵌入元素&quot;事件&quot;  &lt;div id=&quot;&quot; onclick=&quot;JS代码&quot;&gt;XXX&lt;/div&gt;</span><br><span class="line">2.将js代码放入&lt;script&gt;&lt;/script&gt;之间，允许出现在网页的任意位置</span><br><span class="line">3.将js代码编写在外部XXX.js文件中,并在页面中引入&lt;script src=&quot;js文件路径&quot;&gt;&lt;/script&gt;</span><br><span class="line">(引用外部文件后，在引用的&lt;script&gt;标签内不能使用js)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">变量：</span><br><span class="line">内存是程序运行过程中需要用到的数据</span><br><span class="line">1KB=1024byte=8*1024bit</span><br><span class="line">变量是内存中的一段存储空间名,可以自定义值,保存内存空间中的数据</span><br><span class="line">声明：var 变量名</span><br><span class="line">赋值：变量名=值</span><br><span class="line">不加var全局变量(一般不用)</span><br><span class="line">声明多个变量var namee1,name2,age1,age2=20;</span><br><span class="line">输出未赋值的变量，即未初始化，输出undefined</span><br><span class="line">对变量进行Get操作(对userPwd) var newPwd =userPwd</span><br><span class="line">对变量进行Set操作(对newPwd)  newPwd =userPwd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数据类型</span><br><span class="line">1.原始类型（基本类型）</span><br><span class="line">2.引用类型</span><br><span class="line"></span><br><span class="line">原始类型</span><br><span class="line">1.数字类型(number类型)</span><br><span class="line">可以表示32位整数(4字节)和64位浮点型(8字节)</span><br><span class="line">2.字符串类型</span><br><span class="line">标识一系列的文本字符数据</span><br><span class="line">由Unicode字符，数字，标点组成（都占两字节）</span><br><span class="line">查看字符16进制表现方式:&quot;张&quot;.charCodeAt.toString(16) </span><br><span class="line">\n 换行  \r 回车 \t 一个制表符</span><br><span class="line">3.boolean类型</span><br><span class="line">true:真  false:假  除条件判断外做运算时true当做1.false当做0</span><br><span class="line">4.空</span><br><span class="line">null</span><br><span class="line">声明对象未赋值</span><br><span class="line">5.未定义</span><br><span class="line">undefined</span><br><span class="line">声明变量为未负值 </span><br><span class="line">访问对象不存在的属性</span><br><span class="line"></span><br><span class="line">引用类型</span><br><span class="line">1.数据类型转换</span><br><span class="line">var stu;//undefined</span><br><span class="line">stu =25;//number</span><br><span class="line">stu =&quot;25&quot;;//string</span><br><span class="line">2.隐式转换</span><br><span class="line">函数 typeof()或typeof判断数据类型</span><br><span class="line">NaN（Not a Number） 结果为true:不是一个数字  结果为false:是一个数字</span><br><span class="line">3.强制转换</span><br><span class="line">.toString将任意类型转换为string类型</span><br><span class="line">parseInt()获取制定数据的整数部分，从左向右转换，遇到第一个非整数字停止</span><br><span class="line">4.parseFloat() 与parseFloat()相似</span><br><span class="line">5.Number() 将一个字符串解析为number,但不管哪里出现非number类型返回NaN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">函数</span><br><span class="line">函数声明function()&#123;可执行语句&#125;;</span><br><span class="line"></span><br><span class="line">1.定义带参数的函数</span><br><span class="line">function 函数名(形参，userName，userPwd)&#123;</span><br><span class="line">     函数体，功能体，方法体   </span><br><span class="line">&#125;</span><br><span class="line">函数名(实参，&apos;Tom&apos;，&apos;123&apos;)；(调用)</span><br><span class="line">2.带返回值的函数</span><br><span class="line">function 函数名(n1,n2)&#123;</span><br><span class="line">    return n1+n2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">作用域</span><br><span class="line">局部作用域:函数作用域中的变量为局部变量，只在该函数存在</span><br><span class="line">全局作用域：定义在函数外部 var sum=0;</span><br><span class="line">全局作用域中的变量：</span><br><span class="line">var sum=0;</span><br><span class="line">function A()&#123;</span><br><span class="line">    sum=1+2;</span><br><span class="line">&#125;</span><br><span class="line">A();调用函数</span><br><span class="line">console.log(sum);</span><br><span class="line"></span><br><span class="line">按值传递:</span><br><span class="line">var n=100;</span><br><span class="line">function fun(n)&#123;</span><br><span class="line">    n-=3;</span><br><span class="line">console.log(n);//修改的是局部变量n</span><br><span class="line">console.log(n);//输出的是局部变量n，此时为97</span><br><span class="line">&#125;</span><br><span class="line">fen(n);</span><br><span class="line">console.log(n);//输出全局变量100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数组</span><br><span class="line">1.索引数组</span><br><span class="line">数组直接创建 var arr=[];  var arr=[元素1,元素2,...]; arr[0]=元素1;</span><br><span class="line">用new创建  var arr =new Array();  var srr=new Arrey(元素一,元素2,...)；</span><br><span class="line">数组长度可变化，不限制数据类型</span><br><span class="line">var arr=new Array(10);长度为10</span><br><span class="line">使用下标 arr[0],arr[1]...</span><br><span class="line">获取倒数第n个元素: arr[arr.length-n]</span><br><span class="line">遍历数组使用length</span><br><span class="line">for(var i=1;i&lt;arr.length,i++)&#123;</span><br><span class="line">      arr[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.关联数组</span><br><span class="line">var arr=[];</span><br><span class="line">arr[&apos;bookName&apos;]=&apos;西游记&apos;;</span><br><span class="line">arr[&apos;price&apos;]=35.5;</span><br><span class="line">遍历数组没有length</span><br><span class="line">for(var key in hash)&#123;</span><br><span class="line">     key;//元素下标名</span><br><span class="line"> hash[key];//当前元素值</span><br><span class="line">&#125;</span><br><span class="line">快速查找元素使用hash(关联)数组</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数组API函数</span><br><span class="line">1.数组转字符串</span><br><span class="line">String(arr):将arr中每个元素转为字符串,逗号分隔</span><br><span class="line">arr.join(&quot;&quot;连接符):将arr中每个元素转为字符串，用自定义连接符分隔</span><br><span class="line">arr.join(&quot;&quot;)无缝拼接</span><br><span class="line"></span><br><span class="line">2.拼接和选取</span><br><span class="line">不直接修改数组而返回新数字</span><br><span class="line">拼接</span><br><span class="line">var arr1=[1,2];</span><br><span class="line">var arr2=[3,4];</span><br><span class="line">var arr3=arr1.concat(5,arr2); /值为[1,2,5,3,4]</span><br><span class="line">var newArr=arr.concat()</span><br><span class="line"></span><br><span class="line">选取</span><br><span class="line">slice()返回现有数组的一个子数组</span><br><span class="line">var subArr=arr.slice(starti,endi+1) </span><br><span class="line">用法与SubString相同(含头不含尾)</span><br><span class="line">一直取到结尾可省略第二个参数</span><br><span class="line">返取用倒数下标arr.slice(arr,length-n,arr.length-m+1);</span><br><span class="line">可简写为arr.slice(-n,-m+1);</span><br><span class="line">复制数组 arr.slice();</span><br><span class="line"></span><br><span class="line">3.替换</span><br><span class="line">1.删除</span><br><span class="line">arr.splice(starti,n); 删除starti位置开始n个元素(不考虑含头不含尾)</span><br><span class="line">2.插入</span><br><span class="line">arr.splice(starti,0,yuansu1,...)</span><br><span class="line">3.替换</span><br><span class="line">arr.splice(starti,n,1,l,...); 删除后插入n,1,...</span><br><span class="line">arr.splice(starti,n,1,arr2,...);</span><br><span class="line"></span><br><span class="line">4.颠倒</span><br><span class="line">仅负责原样颠倒数组,不负责排序</span><br><span class="line">arr.reverse();</span><br><span class="line"></span><br><span class="line">5.排序</span><br><span class="line">arr.sort():默认将所有元素转为字符串再从小到大排序</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对SSM框架的理解</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/SSM/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/SSM/</id>
    <published>2019-08-19T11:48:32.699Z</published>
    <updated>2019-08-19T14:44:18.521Z</updated>
    
    <content type="html"><![CDATA[<p>SSM框架（Spring+SpringMVC+MyBatis）框架集由Spring、MyBatis两个开源框架整合而成（SpringMVC是Spring中的部分内容）。<br><br>SSM框架通常使用 springMVC为控制器(controller) ，spring 为事务层(service)， MyBatis 负责持久层（dao）。<br><br>SSM框架中pojo类可以与数据库表进行映射，是实体层。<br><br>Spring是一个轻量级的控制反转(IoC)和面向切面(AOP)的容器框架。通过使用注解依赖注入来管理各层的组件，使用AOP切面编程来管理事务，日志，权限等。<br><br>springMVC为控制器，使用Servlet嵌入，分离了控制器、模型对象、分派器以及处理程序对象的角色，让它们更容易进行定制。<br><br>MyBatis持久化dao层，对jdbc的封装。它消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索，使用简单的 XML或注解用于配置和原始映射将接口和 Java 的POJO层对象映射成数据库中的记录。<br><br>SSM框架我做了一个房源系统，具体实现代码可以访问我的github。<a href="https://github.com/shaoshengyu/gituser/tree/master/HouseRentSystem" target="_blank" rel="noopener">https://github.com/shaoshengyu/gituser/tree/master/HouseRentSystem</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;SSM框架（Spring+SpringMVC+MyBatis）框架集由Spring、MyBatis两个开源框架整合而成（SpringMVC是Spring中的部分内容）。&lt;br&gt;&lt;br&gt;SSM框架通常使用 springMVC为控制器(controller) ，spring 为
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>自编的一个简单购物车</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/shopping/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/shopping/</id>
    <published>2019-08-19T11:48:32.696Z</published>
    <updated>2019-08-19T14:21:14.090Z</updated>
    
    <content type="html"><![CDATA[<p>使用MVC框架，一个jsp页面+两个Servlet，使用Session存储用户信息。Jsp通过form表单传值。第一个Servlet文件判断是否有商品加入,并根据该商品是否已在购物车做出判断，然后将商品及其对应数量放入一个Map集合并用session保存。第二个Servlet文件遍历显示购物车中商品信息，并设置返回jsp的超链接。</p><p>purchase.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;PurchaseServlet&quot; method=&quot;Get&quot;&gt;</span><br><span class="line">&lt;p&gt;商品:&lt;/p&gt;</span><br><span class="line">&lt;input name=&quot;equipment&quot; type=&quot;checkbox&quot; value=&quot;空调&quot;&gt;空调&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;input name=&quot;equipment&quot; type=&quot;checkbox&quot; value=&quot;冰箱&quot;&gt;冰箱&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;input name=&quot;equipment&quot; type=&quot;checkbox&quot; value=&quot;洗衣机&quot;&gt;洗衣机&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;input type=&quot;reset&quot; value=&quot;重置&quot;/&gt;&lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>PurchaseServlet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">package com.servlet;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.Cookie;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Servlet implementation class PurchaseServlet</span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/PurchaseServlet&quot;)</span><br><span class="line">public class PurchaseServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">       </span><br><span class="line">    /**</span><br><span class="line">     * @see HttpServlet#HttpServlet()</span><br><span class="line">     */</span><br><span class="line">    public PurchaseServlet() &#123;</span><br><span class="line">        super();</span><br><span class="line">        // TODO Auto-generated constructor stub</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">//获取会话对象</span><br><span class="line">HttpSession session=request.getSession();</span><br><span class="line"></span><br><span class="line">//从会话获取shopping(购物车)属性对象</span><br><span class="line">Map&lt;String,Integer&gt; pur =(Map&lt;String,Integer&gt;)session.getAttribute(&quot;shopping&quot;);</span><br><span class="line">//若无shopping属性对象，则实例化一个</span><br><span class="line"></span><br><span class="line">String sessionId=request.getSession().getId();</span><br><span class="line">Cookie cookie=new Cookie(&quot;sessionId&quot;,request.getSession().getId());</span><br><span class="line">cookie.setMaxAge(365*24*60*60);</span><br><span class="line">response.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">if(pur==null) &#123;</span><br><span class="line">pur = new HashMap&lt;String,Integer&gt;();</span><br><span class="line">&#125;</span><br><span class="line">//获取要购买电器</span><br><span class="line">String[] equipments=request.getParameterValues(&quot;equipment&quot;);</span><br><span class="line">if(equipments!=null&amp;&amp;equipments.length!=0) &#123;</span><br><span class="line">for(String e:equipments) &#123;</span><br><span class="line">//判断电器是否已经在shopping中</span><br><span class="line">if(pur.get(e)!=null) &#123;</span><br><span class="line">//该电器已放入购物车数量</span><br><span class="line">int count=pur.get(e);</span><br><span class="line">pur.put(e, count+1);</span><br><span class="line">&#125;else &#123;</span><br><span class="line">//之前未放入该电器时</span><br><span class="line">pur.put(e,1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//将更新后shopping存储在会话中</span><br><span class="line">session.setAttribute(&quot;shopping&quot;, pur);</span><br><span class="line">response.sendRedirect(&quot;Purchase2Servlet&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Purchase2Servlet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">package com.servlet;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.Cookie;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Servlet implementation class Purchase2Servlet</span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/Purchase2Servlet&quot;)</span><br><span class="line">public class Purchase2Servlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">       </span><br><span class="line">    /**</span><br><span class="line">     * @see HttpServlet#HttpServlet()</span><br><span class="line">     */</span><br><span class="line">    public Purchase2Servlet() &#123;</span><br><span class="line">        super();</span><br><span class="line">        // TODO Auto-generated constructor stub</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doPost(request,response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">//响应消息头——免除乱码</span><br><span class="line">response.setContentType(&quot;text/html;charset=UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">HttpSession session=request.getSession();</span><br><span class="line">Map&lt;String,Integer&gt; pur =(Map&lt;String,Integer&gt;)session.getAttribute(&quot;shopping&quot;);</span><br><span class="line"></span><br><span class="line">String id=null;</span><br><span class="line">Cookie cookies[]=request.getCookies();</span><br><span class="line">for(int i=0;i&lt;cookies.length;i++)&#123;</span><br><span class="line">if(&quot;sessionId&quot;.equals(cookies[i].getName()))&#123;</span><br><span class="line">  id=cookies[i].getValue();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">response.getWriter().print(&quot;&lt;p&gt;sessionId为:&quot;+id+&quot;&lt;/p&gt;&quot;);</span><br><span class="line"></span><br><span class="line">if(pur!=null&amp;&amp;pur.size()!=0) &#123;</span><br><span class="line">response.getWriter().print(&quot;&lt;p&gt;购物车中电器:&lt;/p&gt;&quot;);</span><br><span class="line">//迭代遍历显示购物车中信息</span><br><span class="line">for(String e:pur.keySet())&#123;</span><br><span class="line">response.getWriter().print(&quot;&lt;p&gt;&quot;+e+&quot;,&quot;+pur.get(e)+&quot;台&lt;/p&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">response.getWriter().print(&quot;&lt;p&gt;未购买任何商品&lt;/p&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">response.getWriter().print(&quot;&lt;p&gt;&lt;a href=&apos;purchase.jsp&apos;&gt;继续购买&lt;/a&gt;&lt;/p&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用MVC框架，一个jsp页面+两个Servlet，使用Session存储用户信息。Jsp通过form表单传值。第一个Servlet文件判断是否有商品加入,并根据该商品是否已在购物车做出判断，然后将商品及其对应数量放入一个Map集合并用session保存。第二个Servle
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对MVC的一些了解</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/MVC/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/MVC/</id>
    <published>2019-08-19T11:48:32.694Z</published>
    <updated>2019-08-19T13:57:16.607Z</updated>
    
    <content type="html"><![CDATA[<h2>MVC框架</h2>MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写。<br>MVC的最主要精神之一就是Model与View的分离。<br><br><p>MVC 是一种使用 MVC（Model View Controller 模型-视图-控制器）设计创建 Web 应用程序的模式：<br><br>（1）Model（模型）表示应用程序核心（比如数据库记录列表）。<br><br>（2）View（视图）显示数据（数据库记录）。<br><br>（3）Controller（控制器）处理输入（写入数据库记录）。<br><br></p><p>MVC指MVC模式的某种框架，它强制性的使应用程序的输入、处理和输出分开。<br><br>使用MVC应用程序被分成三个核心部件：模型、视图、控制器。它们各自处理自己的任务。最典型的MVC就是JSP + servlet + javabean的模式。<br><br></p><p>Java Web开发模式在发展中经历了Model 1模式和Model 2模式。<br><br>Model 1模式是以JSP为主的开发模式，分为完全用JSP开发和使用JSP+JavaBean来设计。<br><br>完全使用JSP开发，开发时间较短，但程序可读性较低，程序重复利用率较低，维护成本大。<br><br>使用JSP+JavaBean开发，程序可读性与重复利用率提高，但流程控制不清晰，仍然不易维护。<br><br>Model 2模式即Java Web应用的MVC模式，通过JavaBean、EJB等组件来实现MVC的模型层，通过JSP实现MVC的视图层，通过Servlet实现MVC的控制层。<br><br>Model 2模式的组件可以交互与重用弥补了Model 1的不足，开发流程明确，核心程序管控，更易维护。但Model2 的开发时间较长，在系统设计上花费更多时间。<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;MVC框架&lt;/h2&gt;
MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写。&lt;br&gt;
MVC的最主要精神之一就是Model与View的分离。&lt;br&gt;&lt;br&gt;

&lt;p&gt;MVC 是一种使用 MVC
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于html页面标签的一些理解</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/html/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/html/</id>
    <published>2019-08-19T11:48:32.693Z</published>
    <updated>2019-08-19T13:56:43.714Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line">java前端</span><br><span class="line">web网站即文件夹，page网页即文件。</span><br><span class="line">前端网页由三部分决定。html决定页面结构，css决定页面样式，javascript决定页面上的行为。</span><br><span class="line">HTML：超文本标记语言，构建网页结构，定义网页内容。</span><br><span class="line">CSS：层叠样式表，构建网页布局、外观，美化页面。</span><br><span class="line">JS：JavaScript，脚本语言，构建网页行为，与用户进行交互，是用户更好体验。</span><br><span class="line"></span><br><span class="line">HTML</span><br><span class="line">文件结构:</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;XXX&lt;/title&gt; 浏览器搜索引擎所需信息,出现在网页标题栏。</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">body标签中间显示网站具体内容</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">字符集与编码:</span><br><span class="line">ASCII:对数字、英文字母、符号进行编码</span><br><span class="line">GB2312:简体中文</span><br><span class="line">UNicode；所有语言</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">标签：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">元数据标签&lt;meta&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">标题标签</span><br><span class="line">&lt;h1&gt;&lt;/h1&gt;从 一个页面只会有一个&lt;h1&gt;</span><br><span class="line">&lt;h2&gt;&lt;/h2&gt;上</span><br><span class="line">&lt;h3&gt;&lt;/h3&gt;往</span><br><span class="line">&lt;h4&gt;&lt;/h4&gt;下</span><br><span class="line">&lt;h5&gt;&lt;/h5&gt;变</span><br><span class="line">&lt;h6&gt;&lt;/h6&gt;小</span><br><span class="line">这里是正文文字</span><br><span class="line">标题大小可用css样式规定</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">段落标签           显示</span><br><span class="line">&lt;p&gt;XXX&lt;/p&gt;       XXX</span><br><span class="line">&lt;p&gt;XXX   X,      XXX X, XXXXXX。</span><br><span class="line"></span><br><span class="line">XXXXXX。&lt;/p&gt;</span><br><span class="line">每个段落自动换行，忽略段落内部连续空格，不显示空行，标签内部不自动换行。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">段内换行标签</span><br><span class="line">&lt;br/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">空格字符</span><br><span class="line">&amp;nbsp;</span><br><span class="line"></span><br><span class="line">生成角标标签&lt;sup&gt;</span><br><span class="line">&lt;p&gt;XXX&lt;sup&gt;1&lt;/sup&gt;XXX&lt;/p&gt;</span><br><span class="line">可用于书本上的注解</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">预留格式            </span><br><span class="line">&lt;pre&gt;               显示</span><br><span class="line">XXX    XXX       XXX    XXX  </span><br><span class="line">    xxx              xxx</span><br><span class="line">&lt;/pre&gt;</span><br><span class="line">标签之间空格和换行符会被保留。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">行内组合元素标签</span><br><span class="line">&lt;p&gt;XXX&lt;span&gt;YYY&lt;/span&gt;XXX&lt;/p&gt;</span><br><span class="line">&lt;span&gt;标签组合行内元素YYY,以便通过CSS样式来格式化。</span><br><span class="line">css:</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">span&#123;</span><br><span class="line">    color: blue;(字体蓝色)</span><br><span class="line">font-weight:blod;(字体加粗)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">显示：YYY部分蓝色加粗</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">水平线(分割线)</span><br><span class="line">&lt;hr/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注释内容</span><br><span class="line">&lt;!--   --&gt;</span><br><span class="line">自动注释选中段落，按ctrl+shift+?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">超链接标签</span><br><span class="line">&lt;a href=&quot;网址(比如https://www.baidu.com)&quot; &gt;文字或图片&lt;/a&gt;连接到其他站点</span><br><span class="line">&lt;a href=&quot;xxx.html/jsp&quot; &gt;文字或图片&lt;/a&gt;连接到本站其他网页</span><br><span class="line">&lt;a href=&quot;#&quot;&gt;文字或图片&lt;/a&gt;虚拟超链接，当前并未设定好，暂不设定url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">图像标签&lt;image /&gt;</span><br><span class="line">图像格式:</span><br><span class="line">JPG:有损压缩,色彩丰富图片</span><br><span class="line">GIF:简单动、背景透明(适合图标logo）</span><br><span class="line">PNG:无损压缩、透明、交错、动画</span><br><span class="line">插入图像：&lt;image src=&quot;路径+文件名&quot; alt=&quot;找不到图片时显示的文字&quot; /&gt;</span><br><span class="line">绝对路径：src=&quot;详细地址&quot;，以根目录为基准</span><br><span class="line">相对路径(推荐)：以该文档所在位置为基准</span><br><span class="line">../表示向上一级文件夹</span><br><span class="line">(1)C:/site/index.html,C:/site/logo.gif  图片与文档在同一文件夹，&lt;image src=&quot;logo.gif&quot; /&gt;</span><br><span class="line">(2)C:/index.html,C:/site/logo.gif       图片在文档下一文件夹，&lt;image src=&quot;site/logo.gif&quot; /&gt;</span><br><span class="line">(3)C:/site/index.html,C:/logo.gif       图片在文档上一文件夹，&lt;image src=&quot;../logo.gif&quot; /&gt;</span><br><span class="line">(4)C:/site/index.html,C:/images/logo.gif 图片与文档份属两文件夹,&lt;image src=&quot;../images/logo.gif&quot; /&gt;(先向上一级，再向下一级)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">区域标签&lt;div&gt;</span><br><span class="line">确定一个单独的却与，如页面一部分或一个栏目板块，可规整网页布局。</span><br><span class="line">&lt;div id=&quot;contanier&quot; align=&quot;center&quot;(设置被包括部分格式居中)&gt;</span><br><span class="line">    &lt;div id=&quot;nav&quot;&gt;</span><br><span class="line">      &lt;p&gt;XXX | YYY&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;  </span><br><span class="line">&lt;hr /&gt;</span><br><span class="line">&lt;div id=&quot;content&quot;&gt;</span><br><span class="line">  &lt;p&gt;MMMMMM&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">除了外层板块，内部生成两个板块，每个版块可进行单独的css样式设置。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">无序列表&lt;ul&gt; 列表项&lt;li&gt;</span><br><span class="line">常用于超链接组合</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">   &lt;li&gt;XXX&lt;/li&gt;</span><br><span class="line">   &lt;li&gt;YYY&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">显示时列表项前为小黑点(可通过css设置)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">有序列表&lt;ol&gt; 列表项&lt;li&gt;</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">   &lt;li&gt;XXX&lt;/li&gt;</span><br><span class="line">   &lt;li&gt;YYY&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br><span class="line">显示时列表项前为有序数列+.(可通过css设置)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">表格&lt;table&gt;</span><br><span class="line">&lt;th&gt;表头(加粗) &lt;tr&gt;行 &lt;td&gt;单元格</span><br><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">              &lt;td&gt;&lt;/td&gt;  </span><br><span class="line">              &lt;th&gt;语文&lt;/th&gt;  </span><br><span class="line">              &lt;th&gt;数学&lt;/th&gt;</span><br><span class="line">      &lt;/tr&gt; </span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">              &lt;th&gt;一班&lt;/th&gt;   </span><br><span class="line">              &lt;td&gt;80&lt;/td&gt;  </span><br><span class="line">              &lt;td&gt;40&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt; </span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">              &lt;th&gt;二班&lt;/th&gt;  </span><br><span class="line">              &lt;td&gt;70&lt;/td&gt;  </span><br><span class="line">              &lt;td&gt;60&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt; </span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">form表单</span><br><span class="line">&lt;form&gt;</span><br><span class="line">&lt;input type=&quot;&quot; /&gt;(插入)</span><br><span class="line">type中属性:</span><br><span class="line">text:文本框</span><br><span class="line">password：密码框</span><br><span class="line">input:提交按钮</span><br><span class="line">reset:重置按钮</span><br><span class="line">radio:单选框(只能选一项)(后可设置checked属性，checked=&quot;checked&quot;,该选项默认被选中)</span><br><span class="line">checked:复选框(可选择任意项)(后可设置checked属性，checked=&quot;checked&quot;,该选项默认被选中)</span><br><span class="line"></span><br><span class="line">&lt;select&gt;(下拉框)</span><br><span class="line">   &lt;option&gt;选项1&lt;/option&gt;</span><br><span class="line">   &lt;option selected=&quot;selected&quot;(默认被选项)&gt;选项2&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">文本域:</span><br><span class="line">&lt;textarea rows=&quot;行数&quot; clos=&quot;列数&quot;&gt;默认出现的文本&lt;/textarea&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">语义化标签</span><br><span class="line">&lt;em&gt;斜体+强调&lt;/em&gt;</span><br><span class="line">&lt;i&gt;斜体,无语义&lt;/i&gt;</span><br><span class="line">&lt;strong&gt;粗体+非常强调&lt;/strong&gt;</span><br><span class="line">&lt;b&gt;粗体,无语义&lt;/b&gt;</span><br><span class="line">自定义列表&lt;dl&gt;,列表项&lt;dt&gt;,描述&lt;dd&gt;</span><br><span class="line">&lt;dl&gt;                                 显示</span><br><span class="line">    &lt;dt&gt;HTML&lt;/dt&gt;              HTML</span><br><span class="line">&lt;dd&gt;超文本标记语言&lt;/dd&gt;        超文本标记语言</span><br><span class="line">&lt;dt&gt;CSS&lt;/dt&gt;               CSS</span><br><span class="line">&lt;dd&gt;层叠样式表&lt;/dd&gt;            层叠样式表</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>解决网络问题的Hexo下载与安装</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/hexo/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/hexo/</id>
    <published>2019-08-19T11:48:32.691Z</published>
    <updated>2019-08-19T13:52:08.822Z</updated>
    
    <content type="html"><![CDATA[<h2>首先是nodejs与git的下载<h2>这些可以去官网上下载最新版并根据网上的教程安装。nodejs下载完成后，需要安装一下nodeJs和里面的npm工具。然后在本地找一个位置建一个hexo文件夹，然后鼠标右击Git Bash Here，在git指令中输入git init,完成初始化。<br><h3>接下来是对hexo的下载<h3>由于国内的管制所以在连接外网时网速可能达不到下载的要求，这时候就要使用淘宝的镜像分身生成cnpm来代替npm，这里同时要注意最好不要使用内网，不然可能下载不了。接下来附上安装hexo的流程图片。<br><image src="https://github.com/shaoshengyu/gituser/blob/master/hexo/first.png?raw=true"><br><br><image src="https://github.com/shaoshengyu/gituser/blob/master/hexo/second.png?raw=true"><br><br><image src="https://github.com/shaoshengyu/gituser/blob/master/hexo/third.png?raw=true"><br><br><image src="https://github.com/shaoshengyu/gituser/blob/master/hexo/fourth.png?raw=true"><br><br><br><h2>最后验证成功<h2>登录http://localhost:4000查看发现有hexo自带的主题网页产生。<br><image src="https://github.com/shaoshengyu/gituser/blob/master/hexo/last.png?raw=true"></image></h2></h2></image></image></image></image></h3></h3></h2></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;首先是nodejs与git的下载&lt;h2&gt;
这些可以去官网上下载最新版并根据网上的教程安装。nodejs下载完成后，需要安装一下nodeJs和里面的npm工具。然后在本地找一个位置建一个hexo文件夹，然后鼠标右击Git Bash Here，在git指令中输入git ini
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对使用git时！【rejected】-master问题的解决</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/gitrejected/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/gitrejected/</id>
    <published>2019-08-19T11:48:32.690Z</published>
    <updated>2019-08-19T13:56:08.840Z</updated>
    
    <content type="html"><![CDATA[<p>使用git时有时会出现！【rejected】-master -&gt;master的错误<br><br>如图:<br><br><image src="https://github.com/shaoshengyu/gituser/blob/master/gitrejected/problem.png?raw=true"><br><br><br><br>我的解决方案如下:<br><br><image src="https://github.com/shaoshengyu/gituser/blob/master/gitrejected/resolve.png?raw=true"></image></image></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用git时有时会出现！【rejected】-master -&amp;gt;master的错误&lt;br&gt;&lt;br&gt;如图:&lt;br&gt;&lt;br&gt;&lt;image src=&quot;https://github.com/shaoshengyu/gituser/blob/master/gitrejected
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用的一些git指令</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/gitinstruction/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/gitinstruction/</id>
    <published>2019-08-19T11:48:32.688Z</published>
    <updated>2019-08-19T14:16:09.891Z</updated>
    
    <content type="html"><![CDATA[<p>mkdir <filename>    ——创建一个文件夹(空目录)   假设filename为learngit<br><br>cd                  ——进入某文件夹目录<br><br>ls                    ——查看所在目录的所有文件<br><br>cat readme.txt        ——查看文件内容<br><br>vi readme.txt      ——进入文件编辑界面<br><br>            1、按i进入编辑模式，此时界面右下角显示insert<br><br>            2、编辑完按esc推出insert模式<br><br>            3、按shift + ：（shift + 冒号键）输入wq。  ps：wq表示保存并退出，只有q表示只退出<br><br>            4、最后按enter键退出界面<br><br>rm readme.txt       ——删除文件<br><br>pwd                 ——用于显示当前目录<br></filename></p><p>初始化仓库<br>git  init                      ——初始化一个Git仓库</p><p>添加文件到Git仓库：<br>    1、git add <file>    ——添加文件，可以反复使用多次<br>            先将文件提交到暂存区<br>    2、git commit -m <message>    ——提交文件到Git仓库，-m后面输入的是本次提交的说明<br>            将暂存区文件一次性commit到master上<br>git status        ——查看仓库当前的状态，随时掌握工作区的状态</message></file></p><p>git diff          ——查看difference，若git status提示文件被修改过，使用该命令查看修改内容</p><p>版本回退<br>    git log           ——查看从最近到最远的提交日志，若嫌输出的信息太多可以加上 –pretty=oneline参数</p><pre><code>git reset --hard HEAD^    ——退回到上一个版本，HEAD表示当前版本       git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。git reset --hard 7be436d    ——回到退回前的版本(前提是命令行窗口未被关闭，找到上面的对应版本的                                版本号)版本号没必要写全，前几位就可以了     git reflog                                —— 查看命令历史                                                    （可用于版本退回后想要回到退回前，但已关闭命令行窗口）</code></pre><p>管理修改<br>          第一次修改 -&gt; git add -&gt; 第二次修改 -&gt; git add -&gt; git commit        【正确，推荐】</p><pre><code>第一次修改 -&gt; git add -&gt;  第二次修改 -&gt; git commit     【错误】                                              第二次修改没有被提交，只有再进行一次add、commit</code></pre><p>撤销修改 git checkout<br>  —git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可“一键还原”。<br>            使用git status查看仓库当前状态，若有修改 :</p><pre><code>一、git checkout -- &lt;file&gt; 放弃工作区的修改（两种情况）:                ----此命令让文件回到最近一次git commit或者git add时的状态        1、file自修改后还没有被放到暂存区，此时撤销修改回到和版本库一摸一样的状态。                   直接使用此命令        2、file已经添加至暂存区，又做了修改，此时撤销就回到添加至暂存区后的状态。                    使用git add后，查询仓库状态:                  首先使用 git reset HEAD readme.txt，将暂存区的修改退回工作区。                  再使用 git checkout -- readme.txt  丢弃工作区的修改二、已经提交了不合适的修改到版本库时，想要撤销本次提交。         参考版本回退进行操作，不过前提是没有推送到远程库</code></pre><p>删除文件 rm file<br>            一般情况，直接在文件管理器中删除，或者用 rm test.txt 删除文件 ，此时git知道你删除文件，和版本库不一致   ，git status会提示你那些文件删除了。</p><pre><code>此时有两个选择:     1、确实要从版本库删除该文件，则用git rm删掉，并且git commit     2、删错了，将误删的文件恢复到最新版本：   git checkout -- test.txt</code></pre><p>创建分支并切换 git checkout -b dev<br>        相当于 git branch dev   之后再 git checkout dev</p><pre><code>查看当前分支  git branch日常工作git add file和git commit -m &quot;&quot;dev工作完成则切换回master分支 git checkout masterdev合并到当前分支 git merge dev合并完成后删除 git branch -d dev</code></pre><p>分支合并冲突，把合并失败的文件手动修改再提交。</p><p>分支管理策略，平时不在master分支干活，master只用于发布</p><pre><code>2人以下在dev分支工作，2人以上在dev分支的基础上再建立feature分支上工作普通模式合并有历史分支  在分支上git add file和git commit -m &quot;&quot;，转回上一分支 git merge --no--ff -m &quot;&quot; dev(或者feature)</code></pre><p>bug分支<br>          突然遇到要修改的bug，将当前dev分支的工作储藏  git stash<br>          然后转到要修复的分支  git checkout bug分支<br>          在bug分支创建临时修改分支  git checkout -b issue-101<br>          完成修复并git add file， git commit -m “fix bug 101”(假设这步版本号为为4c80512)<br>          再切换到bug分支合并 git checkout bug分支    git merge –no–ff -m “” issue-101<br>          bug修复返回dev分支工作  git checkout dev<br>          查看储藏的工作现场   git stash list<br>          恢复现场有2种<br>               1 恢复的同时删除stash  git stash pop<br>               2 恢复时不删除stash  git stash apply  之后想删除可以  git stash drop<br>          可以多次stash，恢复时根据工作现场的版本号(假设为stash@{0})恢复   git stash apply stash@{0}<br>          bug修复的分支的相关分支通常也有相同bug，切换到那些分支执行之前的修复操作 git cherry-pick 4c805e2</p><p>Feature分支 feature-v分支修改完毕但未合并，突然需求变化不再需要，  git branch -D feature-v    </p><p>查看远程仓库信息  git remote<br>查看具体信息      git remote -v<br>推送分支          git push master/dev/feature</p><p>将本地未push的分叉整理成直线  git rebase </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mkdir &lt;filename&gt;    ——创建一个文件夹(空目录)   假设filename为learngit&lt;br&gt;&lt;br&gt;cd                  ——进入某文件夹目录&lt;br&gt;&lt;br&gt;ls                    ——查看所在目录的所有文件
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对于html各标签内内容具体css设计笔记</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/csstwo/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/csstwo/</id>
    <published>2019-08-19T11:48:32.686Z</published>
    <updated>2019-08-19T13:55:04.728Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">CSS文字样式</span><br><span class="line">单位</span><br><span class="line">px 像素</span><br><span class="line">em 字符</span><br><span class="line">%  百分比</span><br><span class="line">&lt;p&gt;标签不设置样式则默认120%*12px</span><br><span class="line">若设置div字体大小12px</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;h1&gt;&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">受HTML DOM树继承关系，&lt;h1&gt;和&lt;p&gt;标签内容大小为12px</span><br><span class="line"></span><br><span class="line">颜色</span><br><span class="line">red,blue,green</span><br><span class="line">RGB为红色,蓝色,绿色在黑色下调色</span><br><span class="line">reg(x,x,x):RGB值,每个颜色分量取0-255:</span><br><span class="line">红色:rgb(255,0,0),灰色:rgb(66,66,66)(三种颜色分量一样),黑色(0,0,0)</span><br><span class="line">rgb(x%,x%,x%):RGB百分比值0-100%,如红色rgb(100%,0%,0%)</span><br><span class="line">rgba(x,x,x,x):RGB值,透明度(最后一位)</span><br><span class="line">a值(透明度):0.0(完全透明)-1.0(完全不透明) </span><br><span class="line">#rrggbb:十六进制数,如红色:#ff00(#ff0000去掉了重复位)</span><br><span class="line"></span><br><span class="line">文本</span><br><span class="line">属性              描述         取值</span><br><span class="line">color             文本颜色     red #ff00 rgb,rgba</span><br><span class="line">letter-spacing    字符间距     2px  -3px(负数时会产生重叠效果)</span><br><span class="line">line-height       行高         14px 1.5em 120%(将line-height与height设置的一样就能垂直居中)</span><br><span class="line">text-align        对齐         center(居中)  left  right  justify(两端对齐)</span><br><span class="line">text-decoration   装饰线       none(无装饰线）  overline  underline(下划线)  line-through(删除线)</span><br><span class="line">可设置a&#123;text-decoration:none;&#125;，将超链接下划线删除。</span><br><span class="line">text-indent       首行缩进     2em</span><br><span class="line"></span><br><span class="line">字体</span><br><span class="line">font(属性)在一个声明中设置所有字体的属性</span><br><span class="line">font:bold 18px &apos;幼圆&apos;</span><br><span class="line">font-family(字体系列): &quot;HiraginoSans GB&quot;(有空格要加引号),sans-serif；</span><br><span class="line">font-size(字号)  font-style:italic(斜体)  font-weight(粗体):bold </span><br><span class="line">简化font(必须拥有所有属性)</span><br><span class="line">font:斜体   粗体  字号/行高   字体;</span><br><span class="line">font:italic bold  16px/1.5em  &apos;宋体&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">css背景样式</span><br><span class="line">background空元素要先定义元素的高度和宽度</span><br><span class="line">height:30px;</span><br><span class="line">width:600px;</span><br><span class="line">background-color:rgb(未显示图片则显示颜色)</span><br><span class="line">background-image:url(&quot;logo.jpg&quot;)</span><br><span class="line">background-repeat:repeat(全部填充),repeat-x(横向),repeat-y(纵向),no-repeat(填充一次)</span><br><span class="line">background:颜色 图片 repeat;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">css超链接样式(都设置则按以下顺序编写)</span><br><span class="line">a&#123;</span><br><span class="line">    font-size:22px;</span><br><span class="line">&#125;</span><br><span class="line">a:link&#123;</span><br><span class="line">    text-decoration:none;</span><br><span class="line">color:#09f; /*未访问*/</span><br><span class="line">&#125;</span><br><span class="line">a:visited&#123;</span><br><span class="line">    text-decoration:none;</span><br><span class="line">color:#930; /*已访问*/</span><br><span class="line">&#125;</span><br><span class="line">a:hover&#123;</span><br><span class="line">    text-decoration:underline;</span><br><span class="line">font-size:120%;(字体放大,简单同态效果)</span><br><span class="line">color:#03c; /*鼠标悬停*/</span><br><span class="line">&#125;</span><br><span class="line">a:active&#123;</span><br><span class="line">    text-decoration:none;</span><br><span class="line">    color:#03c; /*按下鼠标*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">列表表格样式</span><br><span class="line">css列表样式ul与ol公用</span><br><span class="line">list-style:所有用于列表的属性设置于一个声明中</span><br><span class="line">list-style-image:设置列表项标志的图像</span><br><span class="line">list-style-position:标志的位置(inside向右缩进/outside向左缩进)</span><br><span class="line">list-style-type:标志的类型</span><br><span class="line"></span><br><span class="line">css表格样式table</span><br><span class="line">border-collapse:collapse;合并表格边框</span><br><span class="line">:ntn-child(odd|even)奇偶选择器</span><br><span class="line">tr:nth-child(odd)每行交替显示颜色</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>盒子模型</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/cssthree/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/cssthree/</id>
    <published>2019-08-19T11:48:32.685Z</published>
    <updated>2019-08-19T13:54:40.960Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">content内容 padding(内边距) border(边界) margin(外边距) </span><br><span class="line">padding,border,margin都有(top,right,bottom,left)(顶部，右部，底部，左部)</span><br><span class="line">width=左右各部+content-width</span><br><span class="line">height=顶底各部+content-height</span><br><span class="line">当内容溢出盒子，overflow属性：hidden(超出部分不可见),scroll(显示滚动条),auto(如果有超出部分显示滚动条)</span><br><span class="line">border属性:</span><br><span class="line">border-width:px</span><br><span class="line">border-style:dashed(虚线)、dotted(点)、solid(实现)、double(双实线)</span><br><span class="line">border-color:颜色</span><br><span class="line">border:width style color</span><br><span class="line">水平分割线(例子):</span><br><span class="line">.line&#123;</span><br><span class="line">   height:1px;</span><br><span class="line">   width:500px;</span><br><span class="line">   border-top:1px solid #e5e5e5;(上边线)</span><br><span class="line">&#125;</span><br><span class="line">对浏览器默认的设置清零</span><br><span class="line">*&#123;</span><br><span class="line">  margin:0;</span><br><span class="line">  padding:0</span><br><span class="line">&#125;</span><br><span class="line">margin:1px 2px 1px 3px;(按顺时针)(顶,右,底,左)</span><br><span class="line">margin:1px(代表4边间距都为1px)</span><br><span class="line">margin不设置全四边,则未设置bottom与top相同,未设置left与right相同。</span><br><span class="line">margin的合并:垂直方向合并(哪个margin-width大,取哪个)，水平方向不合并</span><br><span class="line">图片、文字水平居中:text-align:center;</span><br><span class="line">水平居中:margin:auto;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS定位机制</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/cssfour/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/cssfour/</id>
    <published>2019-08-19T11:48:32.683Z</published>
    <updated>2019-08-19T13:54:16.433Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">文档流定位</span><br><span class="line">元素分类：</span><br><span class="line">block(独占一行,可设置height、width、margin、padding):</span><br><span class="line">常见的有:&lt;div&gt;,&lt;p&gt;,&lt;h1&gt;...&lt;h6&gt;,&lt;ol&gt;,&lt;ul&gt;,&lt;table&gt;,&lt;form&gt;</span><br><span class="line">inline(不独占一行,width就是包含图片和文字宽度不可改变):</span><br><span class="line">常见的有&lt;span&gt;、&lt;a&gt;(元素间会有间距问题)</span><br><span class="line">inline-block(不独占一行,但可设置height、width、margin、padding):</span><br><span class="line">元素类型转换:display属性</span><br><span class="line">display:block/inline/inline/block</span><br><span class="line"></span><br><span class="line">浮动定位</span><br><span class="line">float浮动             clear清除浮动</span><br><span class="line">float:left            clear:left(左侧不会有浮动对象)</span><br><span class="line">flooat:right          clear:right(右侧不会有浮动对象)</span><br><span class="line">float:none(不浮动)    clear:both(两侧不出现浮动，独占一行)</span><br><span class="line">使用float若宽度不够会丢失原有的位置。</span><br><span class="line"></span><br><span class="line">层定位</span><br><span class="line">position属性:</span><br><span class="line">static没有定位</span><br><span class="line">fixed固定定位(相对于浏览器窗口)</span><br><span class="line">relative相对定位(相对于父元素,原位置依然保留，不会被占据)</span><br><span class="line">absolute绝对定位(相对于static定位以外的第一个父元素，原位置不再存在，会被其他盒子占据)</span><br><span class="line">top,right,bottom,left属性:以当前盒子为参照物</span><br><span class="line">z-index:值大的在上面覆盖小的(设置极大或极小值（负数）来设置底层)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对css添加方法和选择器的一些理解与记录</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/ccsone/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/ccsone/</id>
    <published>2019-08-19T11:48:32.681Z</published>
    <updated>2019-08-19T13:53:53.283Z</updated>
    
    <content type="html"><![CDATA[<p>平常接触后端较多，最近发现了前端的一些乐趣，做了一些css样式的笔记。</p><pre><code>CSS层叠样式表内容和样式相分离，便于修改样式。CSS语法&lt;p&gt;XXXXX&lt;/p&gt;(html中)CSS中p(选择器，此处选择html中&lt;p&gt;标签){    font-size:12px;     /*字号*/    color:blue;         /*文字颜色*/    font-weight:bold;   /*加粗*/    属性名:属性值;      /*注释，可跨行*/}    css添加方法(1)行内: &lt;body&gt;&lt;p style=&quot;color:red;&quot;&gt;XXX&lt;/p&gt;&lt;/body&gt;(2)内嵌样式: (适合文件少，css代码也不多的情况)&lt;head&gt;  &lt;style type=&quot;text/css&quot;&gt;   p{       color:red;    }  &lt;/style&gt;&lt;/head&gt;&lt;body&gt;  &lt;p&gt;XXX&lt;/p&gt;&lt;/body&gt;(3)单独文件(外联样式表文件)现有css文件夹与1.html和2.html处于同一文件夹，css文件夹中有style.cssstyle.css外联样式表文件p{color:}1.html网页文件&lt;head&gt;  &lt;link rel=&quot;stylesheet&quot;(连接文件的类型) href=&quot;css/style.css&quot;(文件相对路径) /&gt;&lt;/head&gt;&lt;body&gt;  &lt;p&gt;XXX&lt;/p&gt;&lt;/body&gt;&lt;/head&gt;优先级：多重样式可以层叠，可以覆盖样式的优先按照就近原则行内样式&gt;内嵌样式&gt;连接样式&gt;浏览器默认样式例子:外联样式表文件h3{color:redtext-align:left;font-size:8pt;}内嵌样式h3{text-align:right;font-size:20pt}html中h3得到的样式clor&quot;red;text-aligen:right;font-size:20pt;CSS选择器标签选择器&lt;style type=&quot;text/css&quot;&gt;  body{background-color:#ccc;(背景灰色)  text-align:center(居中)  font-size:12px}  h1{font:&quot;黑体&quot;,font-size:20px;}  p{color:red;}  hr{width:200px;}&lt;style&gt;类别选择器css文件p  { font-size:12px;} .one{font-size:18px;}(注意one前面要加点) .two{font-size:24px;}html文件&lt;body&gt;  &lt;p class=&quot;one&quot;&gt;18px&lt;/p&gt;(注意one前面不要加点)  &lt;p class=&quot;one&quot;&gt;18px&lt;/p&gt;  &lt;p class=&quot;two&quot;&gt;24px&lt;/p&gt;  &lt;p class=&quot;two&quot;&gt;24px&lt;/p&gt;  &lt;p&gt;12px&lt;/p&gt;&lt;/body&gt;ID选择器(与class的区别在于唯一性)css文件 #one{font-size:12px;} #two{font-size:24px;}html文件&lt;body&gt;  &lt;p id=&quot;one&quot;&gt;12px&lt;/p&gt;  &lt;p id=&quot;two&quot;&gt;24px&lt;/p&gt;&lt;/body&gt;嵌套声明css文件p span{color:red;}(用空格隔断标签)html文件&lt;body&gt;&lt;p&gt;&lt;span&gt;红色的字&lt;/span&gt;XXXX&lt;/p&gt;&lt;/body&gt;集体声明css文件h1,p{text-align:center;}(用,隔断标签)html文件&lt;body&gt; &lt;h1&gt;居中的字&lt;/h1&gt; &lt;p&gt;居中的字&lt;/p&gt;&lt;body&gt;全局声明css文件*{   text-align:center}html文件&lt;body&gt;所有未就近设置其他样式的标签内容居中&lt;body&gt;混合id选择器不可多个同时使用。可同时使用一个id选择器和多个class选择器。css文件#my{}.one{}.yellow{}.left{}html文件&lt;div id=&quot;my&quot; class=&quot;one yellow left&quot;&gt;......&lt;div&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;平常接触后端较多，最近发现了前端的一些乐趣，做了一些css样式的笔记。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CSS层叠样式表
内容和样式相分离，便于修改样式。

CSS语法
&amp;lt;p&amp;gt;XXXXX&amp;lt;/p&amp;gt;(html中)
CSS中
p(选择器，此处选择html中&amp;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>自编的一些帮助理解c标签以及el表达式的代码</title>
    <link href="http://shaoshengyu.github.io/2019/08/19/candel/"/>
    <id>http://shaoshengyu.github.io/2019/08/19/candel/</id>
    <published>2019-08-19T11:48:32.680Z</published>
    <updated>2019-08-19T13:53:29.983Z</updated>
    
    <content type="html"><![CDATA[<p>对c标签与el表达式重新学习了一下，有所收获写下一些代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@page import=&quot;java.util.HashMap&quot;%&gt;</span><br><span class="line">&lt;%@page import=&quot;java.util.Map&quot;%&gt;</span><br><span class="line">&lt;%@page import=&quot;java.util.ArrayList&quot;%&gt;</span><br><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot; import=&quot;com.cha4.Book&quot;%&gt;</span><br><span class="line">&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot;%&gt;</span><br><span class="line">&lt;%@taglib prefix=&quot;fn&quot; uri=&quot;http://java.sun.com/jsp/jstl/functions&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:set var=&quot;hello&quot; value=&quot;Hello JSTL!&lt;br/&gt;&quot; scope=&quot;session&quot;/&gt;</span><br><span class="line">&lt;c:out value=&quot;$&#123;hello &#125;&quot; escapeXml=&quot;false&quot; default=&quot;Goodby!&lt;br/&gt;&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">&lt;c:out value=&quot;$&#123;hello &#125;&quot; escapeXml=&quot;true&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">&lt;c:out value=&quot;$&#123;hello2 &#125;&quot; escapeXml=&quot;false&quot; default=&quot;Goodby!&lt;br/&gt;&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">$&#123;fn:substring(hello,0,5)&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:if test=&quot;$&#123;not empty sessionScope.hello&#125;&quot;&gt;</span><br><span class="line">     欢迎您：$&#123;sessionScope.hello&#125;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:set var=&quot;score&quot; value=&quot;85&quot;&gt;&lt;/c:set&gt;</span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">&lt;c:when test=&quot;$&#123;score&gt;=90&#125;&quot;&gt;</span><br><span class="line">优秀&lt;br/&gt;</span><br><span class="line">&lt;/c:when&gt;</span><br><span class="line">&lt;c:when test=&quot;$&#123;score&lt;90&amp;&amp;score&gt;=60&#125;&quot;&gt;</span><br><span class="line">良好&lt;br/&gt;</span><br><span class="line">&lt;/c:when&gt;</span><br><span class="line">&lt;c:otherwise&gt;</span><br><span class="line">不及格&lt;br/&gt;</span><br><span class="line">&lt;/c:otherwise&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">ArrayList list=new ArrayList();</span><br><span class="line">list.add(&quot;一&quot;);</span><br><span class="line">list.add(2);</span><br><span class="line">list.add(3.6);</span><br><span class="line">list.add(&quot;si&quot;);</span><br><span class="line">session.setAttribute(&quot;list&quot;, list);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:forEach items=&quot;$&#123;sessionScope.list&#125;&quot; var=&quot;item&quot; varStatus=&quot;vst&quot;&gt;</span><br><span class="line">序号$&#123;vst.index+1&#125;:$&#123;item&#125;&lt;br&gt;</span><br><span class="line">&lt;%//判断一个数是否在集合内 %&gt;</span><br><span class="line">&lt;c:if test=&quot;$&#123;item eq &apos;2&apos;&#125;&quot;&gt;</span><br><span class="line">存在&lt;br/&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;%=list.get(2)%&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach begin=&quot;3&quot; end=&quot;10&quot; step=&quot;2&quot; var=&quot;num&quot;&gt;</span><br><span class="line">$&#123;num&#125;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">//无序</span><br><span class="line">Map&lt;String,Book&gt; map=new HashMap&lt;String,Book&gt;();</span><br><span class="line">map.put(&quot;Java基础&quot;,new Book(&quot;Java基础开发&quot;,50));</span><br><span class="line">map.put(&quot;Java高级&quot;,new Book(&quot;Java高级开发&quot;,60));</span><br><span class="line">map.put(&quot;JavaWeb&quot;,new Book(&quot;JavaWeb开发&quot;,70));</span><br><span class="line">map.put(&quot;Java框架&quot;,new Book(&quot;Java框架开发&quot;,80));</span><br><span class="line">request.setAttribute(&quot;bookMap&quot;,map);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:forEach items=&quot;$&#123;requestScope.bookMap&#125;&quot; var=&quot;book&quot;&gt;</span><br><span class="line">$&#123;book.key&#125;:$&#123;book.value.name&#125;--$&#123;book.value&#125;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;%=map.get(&quot;Java基础&quot;).getName() %&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;c:set var=&quot;number&quot; value=&quot;a,b,c,d,e&quot;&gt;&lt;/c:set&gt;</span><br><span class="line">&lt;c:forTokens items=&quot;$&#123;number&#125;&quot; var=&quot;num&quot; delims=&quot;,&quot; varStatus=&quot;no&quot;&gt;</span><br><span class="line">&lt;c:out value=&quot;$&#123;no.count&#125;&quot;/&gt;.&lt;c:out value=&quot;$&#123;num&#125;&quot;/&gt;</span><br><span class="line">&lt;/c:forTokens&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:catch var=&quot;myException&quot;&gt;</span><br><span class="line">&lt;%=5/0 %&gt;</span><br><span class="line">&lt;/c:catch&gt;</span><br><span class="line">&lt;c:out value=&quot;$&#123;myException&#125;&lt;br/&gt;&quot; escapeXml=&quot;false&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">&lt;c:out value=&quot;$&#123;myException.message&#125;&lt;br/&gt;&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对c标签与el表达式重新学习了一下，有所收获写下一些代码。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
  </entry>
  
</feed>
